# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# David Tsaritov <tsaritov@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: David Tsaritov <tsaritov@gmail.com>, 2021\n"
"Language-Team: Russian (https://www.transifex.com/caspernetwork/teams/122124/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../dapp-dev-guide/deploying-contracts.rst:6
msgid "Deploying Contracts"
msgstr "Развертывание контрактов"

#: ../../dapp-dev-guide/deploying-contracts.rst:8
msgid ""
"Ultimately, smart contracts are meant to run on the blockchain.  Once your "
"smart contract is complete, it's time to deploy the contract to the "
"blockchain. There are a few pre-requisites to doing this:"
msgstr ""
"Прежде всего, смарт-контракты должны работать на блокчейн. Как только вы "
"завершили работу со своим смарт-контрактом, нужно его развертывать в "
"блокчейн. Чтобы это сделать, нужно выполнить некоторые предварительные "
"условия:"

#: ../../dapp-dev-guide/deploying-contracts.rst:12
msgid "A Client that communicates with the network"
msgstr "Клиент, взаимодействующий с сетью"

#: ../../dapp-dev-guide/deploying-contracts.rst:13
msgid "The private key for the account that pays for the deployment"
msgstr "Приватный ключ для счета, который платит за развертывание"

#: ../../dapp-dev-guide/deploying-contracts.rst:14
msgid ""
"Token to pay for the deployment on the network in the account associated "
"with the private key. Each token transfer costs exactly 0.0001 CSPR (10000 "
"motes). Also, the amount transferred needs to be a minimum of 2.5 CSPR."
msgstr ""
"Токен, оплачивающий развертывание в сети счета, связан с приватным ключом. "
"Каждый перевод токена стоит 0.0001 CSPR (10000 motes). Также объем перевода "
"должен составлять минимум 2.5 CSPR."

#: ../../dapp-dev-guide/deploying-contracts.rst:16
msgid "This section will help you get set up with each pre-requisite."
msgstr "Этот раздел поможет вам с настройками каждого пререквизита. "

#: ../../dapp-dev-guide/deploying-contracts.rst:19
msgid "Client"
msgstr "Клиент"

#: ../../dapp-dev-guide/deploying-contracts.rst:21
msgid ""
"The client software communicates with the network to transmit your "
"deployments to the network. Clients can be created for any application "
"platform, such as JavaScript or Python. The official client for Casper is a "
"Rust client."
msgstr ""
"Клиентский софт взаимодействует с сетью, передавая в нее ваши данные "
"развертывания.  Клиенты могут быть созданы для любой платформы для "
"разработки приложений, например JavaScript или Python. Официальный клиент "
"для Casper - это Rust. "

#: ../../dapp-dev-guide/deploying-contracts.rst:23
#: ../../dapp-dev-guide/deploying-contracts.rst:36
msgid ""
"**Ensure that your client matches the version of the network you intend to "
"deploy to.**"
msgstr ""
"** Убедитесь, что ваш клиент совместим с версией сети, в которой планируется"
" развертывание. **"

#: ../../dapp-dev-guide/deploying-contracts.rst:26
msgid "Using Binaries"
msgstr "Использование бинарных файлов"

#: ../../dapp-dev-guide/deploying-contracts.rst:29
msgid ""
"**Rust**\\ : `casperlabs-client <https://crates.io/crates/casper-client>`_"
msgstr ""
"**Rust**\\ : `casperlabs-client <https://crates.io/crates/casper-client>`_"

#: ../../dapp-dev-guide/deploying-contracts.rst:39
msgid "Building from Source"
msgstr "Сборка из источника"

#: ../../dapp-dev-guide/deploying-contracts.rst:41
msgid ""
"`Instructions <https://github.com/CasperLabs/casper-"
"node/tree/master/client>`_"
msgstr ""
"`Instructions <https://github.com/CasperLabs/casper-"
"node/tree/master/client>`_"

#: ../../dapp-dev-guide/deploying-contracts.rst:44
msgid "Check the Client Version"
msgstr "Проверка версии программы-клиента"

#: ../../dapp-dev-guide/deploying-contracts.rst:46
msgid "There is an official Rust client, that works with the Delta Testnet."
msgstr "Официальный клиент для сети - Rust, он работает в Delta Testnet."

#: ../../dapp-dev-guide/deploying-contracts.rst:48
msgid "To check the client version run:"
msgstr "Чтобы проверить версию клиента, запустите:"

#: ../../dapp-dev-guide/deploying-contracts.rst:54
msgid ""
"If you want to send your deployments to an external network, use the latest "
"released version of the client.  If you are building the client locally, "
"check the gitHash and ensure it matches the githash of the network."
msgstr ""
"Если вы хотите отправить ваши развертывания во внешнюю сеть, используйте "
"новейшую на данный момент версию программы-клиента. Если вы разрабатываете "
"клиент в местной сети, проверьте gitHash и убедитесь, что он совместим с "
"githash сети. "

#: ../../dapp-dev-guide/deploying-contracts.rst:57
msgid "Token to Pay for Deployments"
msgstr "Токен для оплаты развертываний"

#: ../../dapp-dev-guide/deploying-contracts.rst:59
msgid ""
"Blockchains are supported by infrastructure providers called \"Validators\"."
" To use the Validator infrastructure, it's necessary to acquire token to pay"
" for deployments (transactions). In a testnet, this is possible by using a "
"faucet.  Alternatively,  accounts can be funded in Genesis, or token can be "
"transferred from a  Genesis account to a new account.  In a production "
"system, token is typically acquired by visiting an exchange."
msgstr ""
"Блокчейны поддерживаются провайдерами инфраструктуры - так называемыми "
"\"Валидаторами\". Чтобы использовать инфраструктуру валидатора, необходимо "
"получить токен для оплаты развертываний (транзакций). В тестовой сети это "
"можно сделать с помощью крана криптовалют Faucet. В качестве альтернативы, "
"счета могут быть сформированы на Genesis, либо токены могут быть переведены "
"со счета Genesis на новый счет. В системе производства токен обычно "
"получается за посещение обменника. "

#: ../../dapp-dev-guide/deploying-contracts.rst:62
msgid "Target Network"
msgstr "Целевая сеть"

#: ../../dapp-dev-guide/deploying-contracts.rst:64
msgid ""
"When sending a deploy, the client needs to know which host will receive the "
"deployment.  The ``node-address`` and ``chain-name`` parameters provide this"
" info."
msgstr ""
"При отправке развертывания клиент должен знать, какой сервер его получит. "
"Данная информация предоставлена в параметрах адреса нода ``node-address`` и "
"названия цепочки ``chain-name`` ."

#: ../../dapp-dev-guide/deploying-contracts.rst:67
msgid "Creating Keys"
msgstr "Создание ключей"

#: ../../dapp-dev-guide/deploying-contracts.rst:69
msgid ""
"Blockchains use asymmetric key encryption to secure transactions. The secret"
" key used to sign the deployment will be the secret key of the account that "
"is being used to pay for the transaction.  The transaction will execute in "
"this account's context unless key delegation and the ``from`` parameter is "
"being used. To create keys using the rust client, execute the following "
"commandd:"
msgstr ""
"Блокчейны используют ассиметричное шифрование ключей для защиты транзакций. "
"Секретный ключ, который используется как подпись к развертыванию, становится"
" секретным ключом счета, который используется для оплаты транзакции. "
"Транзакция будет исполнена в контексте данного счета, кроме случаев "
"делегирования ключа и использования параметра ``from`` . Чтобы создать ключи"
" на клиенте Rust, выполните следующую команду:"

#: ../../dapp-dev-guide/deploying-contracts.rst:76
msgid "This process will create 3 files:"
msgstr "Этот процесс создаст 3 файла:"

#: ../../dapp-dev-guide/deploying-contracts.rst:79
msgid "secret-key.pem"
msgstr "secret-key.pem"

#: ../../dapp-dev-guide/deploying-contracts.rst:80
msgid "public-key.pem"
msgstr "public-key.pem"

#: ../../dapp-dev-guide/deploying-contracts.rst:81
msgid "public_key_hex"
msgstr "public_key_hex"

#: ../../dapp-dev-guide/deploying-contracts.rst:83
msgid ""
"When passing in the public key as hex, it's recommended to  ``$(cat "
"public_key_hex)`` in the transaction, or extract the contents of the file.\\"
" :raw-html-m2r:`<br>` Use the secret-key.pem file to sign transaction."
msgstr ""
"При передаче публичного ключа в шестнадцатеричном коде hex, рекомендуется "
"сделать ``$(cat public_key_hex)`` в транзакции либо извлечь содержимое файла"
" \\ :raw-html-m2r:`<br>` .  Используйте файл secret-key.pem для подписи "
"транзакции. "

#: ../../dapp-dev-guide/deploying-contracts.rst:87
msgid "Sending a Deployment to the Delta Testnet"
msgstr "Отправка развертывания в Delta Testnet"

#: ../../dapp-dev-guide/deploying-contracts.rst:89
msgid ""
"The easiest way to deploy a contract is to use an existing public network.  "
"CasperLabs provides a Testnet for this. The Testnet is operated by external "
"validators that can accept transactions."
msgstr ""
"Самый простой способ развернуть контракт - использовать существующую "
"публичную сеть. Для этого CasperLabs  предоставляет тестовую Testnet. Сеть "
"Testnet оперируется внешними валидаторами, которые могут принимать "
"транзакции. "

#: ../../dapp-dev-guide/deploying-contracts.rst:93
msgid "Obtain Token"
msgstr "Получение токена"

#: ../../dapp-dev-guide/deploying-contracts.rst:95
msgid ""
"To send a deploy to the network, create keys and obtain token. Token can be "
"obtained via a faucet or by a participant that has token.  Connect to our "
"`Discord <https://discordapp.com/invite/Q38s3Vh>`_ to get token via an "
"existing participant."
msgstr ""
"Чтобы отправить развертывание в сеть, создайте ключи и получите токен. "
"Получить токен можно через кран или у участника, у которого он уже есть. "
"Чтобы получить токен через участника, подсоединитесь к нашей `Discord "
"<https://discordapp.com/invite/Q38s3Vh>`_ ."

#: ../../dapp-dev-guide/deploying-contracts.rst:100
msgid "A Basic Deployment using the Command Line (Rust Client)"
msgstr ""
"Основное развертывание с использованием командной строки (в клиенте Rust)"

#: ../../dapp-dev-guide/deploying-contracts.rst:102
msgid ""
"As described above, a basic deployment must provide some essential "
"information. Here is an example deployment using the Rust client that will "
"work with the basic contract we created using the `Contracts SDK for Rust "
"<writing-rust-contracts>`_. The default port is 7777:"
msgstr ""
"Как описано выше, основное развертывание должно обеспечить некоторую "
"необходимую информацию. Здесь пример развертывания с использованием Rust "
"клиента на примере работы с основным контрактом, который мы создали с "
"`Contracts SDK for Rust <writing-rust-contracts>`_. Порт по умолчанию 7777:"

#: ../../dapp-dev-guide/deploying-contracts.rst:108
msgid ""
"If your deployment command is correct, expect to see a success message that "
"looks like this:"
msgstr ""
"Если команда к развертыванию введена правильно, ожидайте сообщение, которое "
"выглядит вот так:"

#: ../../dapp-dev-guide/deploying-contracts.rst:114
msgid ""
"Note: Each deploy gets a unique hash.  This is part of the cryptographic "
"security of blockchain technology.  No two deploys will ever return the same"
" hash."
msgstr ""
"Внимание: у каждого развертывания свой уникальный хеш. Это часть "
"криптографической безопасности технологии блокчейн. Не существует двух "
"разных развертываний с одинаковым хешем. "

#: ../../dapp-dev-guide/deploying-contracts.rst:117
msgid "Check Deploy Status"
msgstr "Проверка статуса развертывания"

#: ../../dapp-dev-guide/deploying-contracts.rst:119
msgid ""
"Once the network has received the deployment, it will queue up in the system"
" before being listed in a block for execution.  Sending a transaction "
"(deployment) to the network does not mean that the transaction processed "
"successfully.  Therefore, it's important to check to see that the contract "
"executed properly, and that the block was finalized."
msgstr ""
"Как только сеть получила развертывание, оно будет ожидать в системе, прежде "
"чем будет помещено в блок для исполнения. Отправка транзакции "
"(развертывания) в сеть не означает, что транзакция прошла успешно. Поэтому "
"важно проверять, исполнен ли контракт корректно и финализирован ли блок. "

#: ../../dapp-dev-guide/deploying-contracts.rst:125
msgid "Which will return a data structure like this:"
msgstr "Что вернет структуру данных в виде:"

#: ../../dapp-dev-guide/deploying-contracts.rst:222
msgid ""
"From this data structure we can observe some properties about the deploy "
"(some of which can be set by the user):"
msgstr ""
"Из этой структуры данных мы можем наблюдать некоторые частности о "
"развертывании (некоторые из них могут быть настроены пользователем):"

#: ../../dapp-dev-guide/deploying-contracts.rst:225
msgid "Execution cost 164645 gas"
msgstr "Исполнение стоит 164645 газ"

#: ../../dapp-dev-guide/deploying-contracts.rst:226
msgid "No errors were returned by the contract"
msgstr "Ошибок в контракте не обнаружилось"

#: ../../dapp-dev-guide/deploying-contracts.rst:227
msgid "There were no dependencies for this deploy"
msgstr "Для данного развертывания нет зависимостей"

#: ../../dapp-dev-guide/deploying-contracts.rst:228
msgid "The Time to Live was 1 hour"
msgstr "Продолжительность жизни составила 1 час"

#: ../../dapp-dev-guide/deploying-contracts.rst:230
msgid ""
"It is also possible to check the contract's state by performing a ``query-"
"state`` command using the client."
msgstr ""
"Также состояние контракта можно проверить с помощью команды ``query-state`` "
"в клиенте. "

#: ../../dapp-dev-guide/deploying-contracts.rst:233
msgid "A Note about Gas Prices"
msgstr "Заметка о ценах газа"

#: ../../dapp-dev-guide/deploying-contracts.rst:235
msgid ""
"If you notice in the put-deploy command above, we supplied a payment amount "
"argument:"
msgstr ""
"Если вы заметили в команде put-deploy выше, мы удовлетворили спор о размере "
"выплаты:"

#: ../../dapp-dev-guide/deploying-contracts.rst:241
msgid ""
"But the actual execution cost was only ``164645`` when it was run on the "
"chain!"
msgstr ""
"Но актуальная стоимость исполнения была только``164645`` , когда она "
"производилась в сети! "

#: ../../dapp-dev-guide/deploying-contracts.rst:243
msgid ""
"A common question that frequently arises is: \"How do I know what the "
"payment amount (gas cost) should be?\" The honest answer is that we are hard"
" at work to create tools to help you estimate your costs. Currently, we "
"recommend using the `NCTL <https://docs.casperlabs.io/en/latest/dapp-dev-"
"guide/setup-nctl.html>`_ tool on your local machine or the testnet to deploy"
" your contracts in a test environment. As you just saw, you can check a "
"deploy status and roughly see how much it would actually cost when deployed."
msgstr ""
"Такой вопрос часто возникает: \"Как я могу знать, какой должен быть размер "
"выплаты (стоимость в газ)?\". По правде говоря, мы усиленно работаем над "
"созданием инструментария, который поможет вам оценивать вашу стоимость. А "
"пока что мы рекомендуем использовать инструмент `NCTL "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-nctl.html>`_ на "
"своей локальной машине или в тестнете, где вы развертываете свои контракты в"
" тестовой среде. Как вы сейчас увидели, вы можете проверить статус "
"развертывания и прикинуть, сколько это будет стоить по завершении "
"развертывания. "

#: ../../dapp-dev-guide/deploying-contracts.rst:245
msgid ""
"You can estimate the costs in this way, and then add a small buffer in case "
"the network state has changed. So in this example above, you might have "
"chosen to set the payment to 175000 or 200000, rather than the 10000000 that"
" was used."
msgstr ""
"Можете оценивать таким способом и затем добавлять сверху небольшой буфер на "
"случай изменения состояния сети. Так, в этом примере выше, вы могли бы "
"выбрать стоимость 175000 или 2000000 вместо 10000000, которая была "
"поставлена. "

#: ../../dapp-dev-guide/deploying-contracts.rst:249
msgid "Advanced Deployments"
msgstr "Продвинутые развертывания"

#: ../../dapp-dev-guide/deploying-contracts.rst:251
msgid "CasperLabs supports complex deployments."
msgstr "CasperLabs поддерживает продвинутые развертывания"

#: ../../dapp-dev-guide/deploying-contracts.rst:254
msgid "Using Arguments with Deployments"
msgstr "Работа со спорами о развертываниях"

#: ../../dapp-dev-guide/deploying-contracts.rst:256
msgid ""
"Casper contracts support arguments for deployments, which enables powerful "
"capabilities for smart contract development.  The casper client provides "
"some examples on how to do this:"
msgstr ""
"Контракты в Casper поддерживают споры для развертываний, что предоставляет "
"мощные возможности для разработки смарт-контрактов. Клиент Casper показывает"
" несколько примеров, как это делается:"

#: ../../dapp-dev-guide/deploying-contracts.rst:264
msgid "Creating, signing, and deploying contracts with multiple signatures"
msgstr "Создание, подпись и развертывание контрактов с мультиподписями:"

#: ../../dapp-dev-guide/deploying-contracts.rst:266
msgid ""
"The ``deploy`` command on its own provides multiple actions strung together "
"optimizing for the common case, with the capability to separate concerns "
"between your key management and deploy creation. See details about "
"generating account key pairs in the Developer Guide."
msgstr ""
"Команда ``deploy`` сама по себе предоставляет множество действий, собранных "
"вместе и оптимизирующих общие случаи, а также дающих возможность разделить "
"задачи между ключевым менеджментом и созданием развертываний. Смотрите "
"детали о генерировании пар ключей для счета в Гайде Разработчика. "

#: ../../dapp-dev-guide/deploying-contracts.rst:268
msgid ""
"Every account can associate multiple keys with it and give each a weight. "
"Collective weight of signing keys decides whether an action of certain type "
"can be made. To learn more about how weights and threshholds work, please "
"review the `Blockchain Design "
"<https://docs.casperlabs.io/en/latest/implementation/accounts.html>`_. In "
"order to collect weight of different associated keys, a deploy has to be "
"signed by corresponding private keys. The ``put-deploy`` command creates a "
"deploy, signs it and deploys to the node but doesn't allow for signing with "
"multiple keys. Therefore, we split ``deploy`` into separate commands:"
msgstr ""
"Каждый счет может быть связан с несколькими ключами и давать каждому из них "
"вес. Коллективный вес подписей ключей определяет возможность совершения "
"действий определенного типа. Чтобы узнать больше о том, как работает вес и "
"пороговые значения, обратитесь пожалуйста к `Blockchain Design "
"<https://docs.casperlabs.io/en/latest/implementation/accounts.html>`_. Чтобы"
" собрать вес от разных связанных ключей, развертывание должно быть подписано"
" соответствующими приватными ключами. Команда ``put-deploy`` создает "
"развертывание, подписывает его и разворачивает в ноду, но не дает разрешения"
" на подпись множественными ключами. Поэтому мы разделяем развертывание "
"``deploy`` на несколько команд:"

#: ../../dapp-dev-guide/deploying-contracts.rst:271
msgid "``make-deploy``  - creates a deploy from input parameters"
msgstr "``make-deploy`` - создает развертывание из введенных параметров"

#: ../../dapp-dev-guide/deploying-contracts.rst:272
msgid "``sign-deploy``  - signs a deploy with given private key"
msgstr "``sign-deploy`` - подписывает развертывание заданным приватным ключом"

#: ../../dapp-dev-guide/deploying-contracts.rst:273
msgid "``send-deploy``  - sends a deploy to CasperLabs node"
msgstr "``send-deploy`` - отправляет развертывание в ноду CasperLabs"

#: ../../dapp-dev-guide/deploying-contracts.rst:275
msgid ""
"To make a deploy signed with multiple keys: first create the deploy with "
"``make-deploy``. This generates a deploy file that can be sent to the other "
"signers, who then sign it with their keys by calling ``sign-deploy`` for "
"each key. Signatures need to be gathered on the deploy one after another, "
"untill all requisite parties have signed the deploy.  Finally the signed "
"deploy is sent to the node with ``send-deploy`` for processing by the "
"network."
msgstr ""
"Чтобы создать развертывание с возможностью мультиподписи: сначала создайте "
"развертывание с ``make-deploy``. Это сгенерирует файл развертывания, который"
" затем может быть отправлен другим подписантам, которые подпишут его своими "
"ключами, задавая ``sign-deploy`` для каждого ключа. Подписи должны быть "
"собраны в развертывании одна за другой, пока все необходимые стороны не "
"подпишут его. В конце концов подписанное развертывание отправляется в ноду с"
" командой ``send-deploy`` для дальнейшего процессинга в сети. "
