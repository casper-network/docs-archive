# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# David Tsaritov <tsaritov@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: David Tsaritov <tsaritov@gmail.com>, 2021\n"
"Language-Team: Russian (https://www.transifex.com/caspernetwork/teams/122124/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../dapp-dev-guide/solidity.rst:3
msgid "Transpiling Solidity to Rust"
msgstr "Транспиляция Solidity в Rust"

#: ../../dapp-dev-guide/solidity.rst:5
msgid ""
"**Introducing Caspiler - Transpile Solidity to Rust and access the cool "
"features of Casper!**"
msgstr ""
"**Представляем Caspiler - транспилер Solidity на Rust и доступ к крутым "
"возможностям Casper!**"

#: ../../dapp-dev-guide/solidity.rst:8
msgid "Smart Contracts on Casper"
msgstr "Смарт-контракты Casper"

#: ../../dapp-dev-guide/solidity.rst:10
msgid ""
"The Casper Virtual Machine runs smart contracts that compile to Webassembly."
" There are two ecosystems that provide compilation targets for webassembly: "
"Rust and AssemblyScript.  CasperLabs provides smart contract libraries to "
"support development for both of these languages. The core development of the"
" Casper Protocol is taking place in Rust, and as a result, there are many "
"Rust tools that make rapid Smart Contracts development possible. It is "
"widely recognized that most smart contracts in use today have been authored "
"in Solidity for the EVM (Ethereum Virtual Machhine)."
msgstr ""
"Виртуальная машина Casper выполняет смарт-контракты, которые компилируются в"
" Webassembly. Есть две экосистемы, которые  компилируются  для в "
"webassembly: Rust и AssemblyScript. CasperLabs предоставляет библиотеки "
"смарт-контрактов для поддержки разработки для обоих этих языков. Основная "
"разработка протокола Casper происходит в Rust, и, как следствие, существует "
"множество инструментов Rust, которые делают возможной быструю разработку "
"смарт-контрактов. Широко признано, что большинство используемых сегодня "
"смарт-контрактов были созданы в Solidity для EVM (Ethereum Virtual "
"Machhine)."

#: ../../dapp-dev-guide/solidity.rst:13 ../../dapp-dev-guide/solidity.rst:42
msgid "Solidity"
msgstr "Solidity"

#: ../../dapp-dev-guide/solidity.rst:15
msgid ""
"Without any doubt, the existence and simplicity of Solidity is one of the "
"key factors behind the growth of Ethereum. There is a large group of "
"developers for whom Solidity is still the best tool for expressing their "
"Smart Contract ideas. At CasperLabs we feel a strong connection with the "
"Ethereum community, so we decided to include support for Solidity via a "
"transpiler."
msgstr ""
"Без сомнения, емкость и простота Solidity - один из ключевых факторов роста "
"Ethereum. Существует большая группа разработчиков, для которых Solidity по-"
"прежнему является лучшим инструментом для выражения своих идей в смарт-"
"контрактах. В CasperLabs мы чувствуем сильную связь с сообществом Ethereum, "
"поэтому мы решили включить поддержку Solidity с помощью транспилятора."

#: ../../dapp-dev-guide/solidity.rst:18
msgid "Transpiler"
msgstr "Транспилятор"

#: ../../dapp-dev-guide/solidity.rst:20
msgid ""
"Transpiling is a well known process of turning code written in one high-"
"level language into another high-level language. At the moment the most "
"popular example is the TypeScript to JavaScript transpiler."
msgstr ""
"Транспилирование - это общеизвестный процесс превращения кода, написанного "
"на одном языке высокого уровня, в другой язык высокого уровня. На данный "
"момент наиболее популярным примером является транспилятор TypeScript в "
"JavaScript."

#: ../../dapp-dev-guide/solidity.rst:22
msgid ""
"We have concluded that Solidity support is much easier and efficient to "
"achieve by transpiling Solidity to Rust, rather than by compiling Solidity "
"to WASM bytecode for the following reasons:"
msgstr ""
"Мы пришли к выводу, что поддержку Solidity намного проще и эффективнее "
"реализовать путем транспиляции Solidity в Rust, а не компиляции Solidity в "
"байт-код WASM по следующим причинам:"

#: ../../dapp-dev-guide/solidity.rst:25
msgid ""
"Solidity features are easy to express in Rust, which is a much richer "
"language."
msgstr ""
"Возможности Solidity легко выразить в Rust, который обладает  гораздо "
"большими возможностями."

#: ../../dapp-dev-guide/solidity.rst:26
msgid "The shape of CasperLabs DSL is similar to Solidity."
msgstr "CasperLabs DSL в многом  аналогична Solidity."

#: ../../dapp-dev-guide/solidity.rst:27
msgid ""
"The CasperLabs Rust toolchain is something we want to leverage, rather than "
"coding it from scratch."
msgstr ""
"Набор инструментов CasperLabs Rust - это то, что мы хотим использовать, а не"
" кодировать с нуля."

#: ../../dapp-dev-guide/solidity.rst:28
msgid ""
"The Casper execution model is different than Ethereum's, therefore it's "
"easier to translate it on the language level, than on the bytecode level."
msgstr ""
"Модель выполнения Casper отличается от модели Ethereum, поэтому ее легче "
"перевести на уровень языка, чем на уровень байт-кода."

#: ../../dapp-dev-guide/solidity.rst:31
msgid "Solidity to Rust Migration"
msgstr "Миграция с Solidity на Rust"

#: ../../dapp-dev-guide/solidity.rst:33
msgid ""
"Having transpiler gives Smart Contract developers a powerful tool for the "
"migration of the existing Solidity source code to Rust if they wish to use "
"it."
msgstr ""
"Наличие транспилятора обеспечивает разработчиков смарт-контрактов мощным "
"инструментом для миграции существующего исходного кода Solidity на Rust, "
"если они хотят его использовать."

#: ../../dapp-dev-guide/solidity.rst:36
msgid "Simple Example"
msgstr "Простой пример"

#: ../../dapp-dev-guide/solidity.rst:38
msgid ""
"Let's see how the Solidity code is being transpiled to the CasperLabs Rust "
"DSL. There is almost one to one translation of the core components: "
"``contract``\\ , ``constructor`` and ``method``."
msgstr ""
"Давайте посмотрим, как код Solidity переносится в CasperLabs Rust DSL. "
"Основные компоненты переводятся практически один в один: ``contract``\\ , "
"``constructor`` and ``method``."

#: ../../dapp-dev-guide/solidity.rst:63
msgid "CasperLabs Rust DSL"
msgstr "CasperLabs Rust DSL"

#: ../../dapp-dev-guide/solidity.rst:89
msgid "ERC20"
msgstr "ERC20"

#: ../../dapp-dev-guide/solidity.rst:91
msgid ""
"It is possible to transpile a complex Smart Contracts like ERC20 Token. Full"
" example with tests can be found in this `GitHub repository "
"<https://github.com/casper-ecosystem/erc20>`_."
msgstr ""
"Можно перенести сложные смарт-контракты, такие как токен ERC20. Полный "
"пример с тестами можно найти по ссылке <https://github.com/casper-"
"ecosystem/erc20>`_."

#: ../../dapp-dev-guide/solidity.rst:95
msgid "Deploying to Testnet."
msgstr "Развертывание  в Testnet."

#: ../../dapp-dev-guide/solidity.rst:97
msgid ""
"Take a look at the deployment instructions in the dApp developer guide for "
"details."
msgstr ""
"Ознакомьтесь с инструкциями по развертыванию в руководстве разработчика dApp"
" для получения подробной информации."
