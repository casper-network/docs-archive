# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Quang Huy Tran <tqhuy2018@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:48+0000\n"
"Last-Translator: Quang Huy Tran <tqhuy2018@gmail.com>, 2021\n"
"Language-Team: Vietnamese (https://www.transifex.com/caspernetwork/teams/122124/vi/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: vi\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../implementation/execution-semantics.rst:4
msgid "Execution Semantics"
msgstr "Ý nghĩa thực thi"

#: ../../implementation/execution-semantics.rst:9
msgid "Introduction"
msgstr "Giới thiệu"

#: ../../implementation/execution-semantics.rst:11
msgid ""
"The CasperLabs system is a decentralized computation platform. In this "
"chapter we describe aspects of the computational model we use."
msgstr ""
"Hệ thống CasperLabs là một nền tảng tính toán phi tập trung. Trong chương "
"này, chúng tôi mô tả các khía cạnh của mô hình tính toán mà chúng tôi sử "
"dụng."

#: ../../implementation/execution-semantics.rst:17
msgid "Measuring computational work"
msgstr "Đo lường công việc tính toán"

#: ../../implementation/execution-semantics.rst:19
msgid ""
"Computation is all done in a `WebAssembly (wasm) "
"<https://webassembly.org/>`__ interpreter, allowing any programming language"
" which compiles to wasm to become a smart contract language for the "
"CasperLabs blockchain. Similar to Ethereum, we use ``Gas`` to measure "
"computational work in a way which is consistent from node to node in the "
"CasperLabs network. Each wasm instruction is `assigned "
"<https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/shared/wasm_config.rs#L15>`_"
" a ``Gas`` value, and the amount of gas spent is tracked by the runtime with"
" each instruction executed by the interpreter. All executions are finite "
"because each has a finite *gas limit* that specifies the maximum amount of "
"gas that can be spent before the computation is terminated by the runtime. "
"How this limit is determined is discussed in more detail below."
msgstr ""
"Tất cả tính toán được thực hiện trong một trình thông dịch `WebAssembly "
"(wasm) <https://webassembly.org/>` __, cho phép bất kỳ ngôn ngữ lập trình "
"nào biên dịch thành wasm trở thành ngôn ngữ hợp đồng thông minh cho chuỗi "
"khối CasperLabs. Tương tự như Ethereum, chúng tôi sử dụng ``Gas`` để đo "
"lường công việc tính toán theo cách nhất quán từ nút này sang nút khác trong"
" mạng CasperLabs. Mỗi lệnh wasm được `chỉ định "
"<https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/shared/wasm_config.rs#L15>`_"
" a ``Gas`` và giá trị lượng gas đã tiêu được theo dõi trong thời điểm chạy "
"với mỗi lệnh được thực thi bởi trình thông dịch. Tất cả các lần thực thi đều"
" hữu hạn vì mỗi lần thực thi đều có *gas limit*  chỉ định lượng gas tối đa "
"có thể được sử dụng trước khi quá trình tính toán kết thúc bởi điểm gian "
"chạy. Cách xác định giới hạn này sẽ được thảo luận chi tiết hơn bên dưới."

#: ../../implementation/execution-semantics.rst:26
msgid ""
"Although computation is measured in ``Gas``, we still take payment for "
"computation in :ref:`motes <tokens-divisibility>`. Therefore, there is a "
"conversion rate between ``Gas`` and motes. How this conversion rate is "
"determined is discussed elsewhere."
msgstr ""
"Mặc dù tính toán được đo bằng ``Gas``, chúng tôi vẫn tính tiền cho việc tính"
" toán trong :ref:`motes <tokens-divisibility>`. Do đó, có một tỷ lệ chuyển "
"đổi giữa ``Gas`` và motes. Cách xác định tỷ lệ chuyển đổi này sẽ được thảo "
"luận ở phần khác."

#: ../../implementation/execution-semantics.rst:31
msgid "Deploys"
msgstr "Triển khai"

#: ../../implementation/execution-semantics.rst:33
msgid ""
"A *deploy* represents a request from a user to perform computation on our "
"platform. It has the following information:"
msgstr ""
"*Triển khai* đại diện cho một yêu cầu từ người dùng để thực hiện tính toán "
"trên nền tảng của chúng tôi. Nó có các thông tin sau:"

#: ../../implementation/execution-semantics.rst:35
msgid ""
"Body: containing payment code and session code (more details on these below)"
msgstr ""
"Phần thân: có chứa mã thanh toán và mã phiên (thêm chi tiết về những điều "
"này bên dưới)"

#: ../../implementation/execution-semantics.rst:36
msgid "Header: containing"
msgstr "Phần đầu: gồm có"

#: ../../implementation/execution-semantics.rst:38
msgid ""
"the :ref:`identity key <global-state-account-key>` of the account the deploy"
" will run in"
msgstr ""
":ref:`khoá định danh <global-state-account-key>` của tài khoản mà trong đó "
"triển khai sẽ chạy"

#: ../../implementation/execution-semantics.rst:39
msgid "the timestamp when the deploy was created"
msgstr "dấu thời gian khi tạo mới triển khai"

#: ../../implementation/execution-semantics.rst:40
msgid ""
"a time to live, after which the deploy is expired and cannot be included in "
"a block"
msgstr ""
"thời gian tồn tại, sau đó quá trình triển khai sẽ hết hạn và không thể được "
"đưa vào một khối"

#: ../../implementation/execution-semantics.rst:42
msgid "the ``blake2b256`` hash of the body"
msgstr "hàm băm ``blake2b256`` của phần thân"

#: ../../implementation/execution-semantics.rst:44
msgid "Deploy hash: the ``blake2b256`` hash of the Header"
msgstr "Triển khai hàm băm: hàm băm ``blake2b256`` của Phần đầu"

#: ../../implementation/execution-semantics.rst:45
msgid ""
"Approvals: the set of signatures which have signed the deploy hash, these "
"are used in the :ref:`account permissions model <accounts-associated-keys-"
"weights>`"
msgstr ""
"Phê duyệt: tập hợp các chữ ký đã ký vào hàm băm triển khai, chúng được sử "
"dụng trong :ref:`mô hình phân quyền tài khoản <accounts-associated-keys-"
"weights>`"

#: ../../implementation/execution-semantics.rst:47
msgid ""
"Each deploy is an atomic piece of computation in the sense that, whatever "
"effects a deploy would have on the global state must be entirely included in"
" a block or the entire deploy must not be included in a block."
msgstr ""
"Mỗi triển khai là một phần tử của tính toán theo nghĩa là, bất kỳ tác động "
"nào của một triển khai đối với trạng thái toàn cục phải bao gồm hoàn toàn "
"trong một khối hoặc toàn bộ triển khai không được bao gồm trong một khối."

#: ../../implementation/execution-semantics.rst:52
msgid "Phases of deploy execution"
msgstr "Các giai đoạn triển khai thực hiện"

#: ../../implementation/execution-semantics.rst:54
msgid ""
"A deploy is executed in distinct *phases* in order to accommodate paying for"
" computation in a flexible way. The phases of a deploy are payment, session,"
" and finalization. During the payment phase, the payment code is executed. "
"If it is successful, then the sessions code is executed during the session "
"phase. And, finally (independent of whether session code was executed), the "
"finalization phase is executed, which does some bookkeeping around payment."
msgstr ""
"Triển khai được thực hiện theo *giai đoạn* riêng biệt để phù hợp với thanh "
"toán cho việc tính toán một cách linh hoạt. Các giai đoạn của một triển khai"
" là thanh toán, các phiên và hoàn thành. Trong giai đoạn thanh toán, mã "
"thanh toán được thực hiện. Nếu nó thành công, thì mã phiên được thực thi "
"trong giai đoạn phiên. Và cuối cùng (không phụ thuộc vào việc mã phiên đã "
"được thực thi hay chưa), giai đoạn hoàn thành được thực hiện, điều này thực "
"hiện một số việc ghi sổ kế toán xung quanh việc thanh toán."

#: ../../implementation/execution-semantics.rst:56
msgid ""
"In particular, the finalization phase refunds the user any unspent ``Gas`` "
"originally purchased (after converting back to motes), and moves the "
"remaining payment into the rewards pool for the validators. The finalization"
" phase does not include any user-defined logic, it is merely upkeep for the "
"system."
msgstr ""
"Đặc biệt, giai đoạn cuối hoàn trả số tiền ``Gas`` bất kỳ nào cho người dùng "
"chưa sử dụng khi mua ban đầu (sau khi chuyển đổi trở lại thành mote) và "
"chuyển khoản thanh toán còn lại vào nhóm phần thưởng cho người xác thực. "
"Giai đoạn hoàn thành không bao gồm bất kỳ logic nào do người dùng xác định, "
"nó chỉ đơn thuần là bảo trì cho hệ thống."

#: ../../implementation/execution-semantics.rst:61
msgid "Payment code"
msgstr "Mã thanh toán"

#: ../../implementation/execution-semantics.rst:63
msgid ""
"*Payment code* provides the logic used to pay for the computation the deploy"
" will do. Payment code is allowed to include arbitrary logic, providing "
"maximal flexibility in how a deploy can be paid for (e.g., the simplest "
"payment code could use the account’s :ref:`main purse <tokens-purses-and-"
"accounts>`, while an enterprise application may require deploys to pay via a"
" multi-sig application accessing a corporate purse). We restrict the gas "
"limit of the payment code execution, based on the current conversion rate "
"between gas and motes, such that no more than ``MAX_PAYMENT_COST`` motes (a "
"constant of the system) are spent. To ensure payment code will pay for its "
"own computation, we only allow accounts with a balance in their main purse "
"greater than or equal to ``MAX_PAYMENT_COST``, to execute deploys."
msgstr ""
"*Mã thanh toán* cung cấp logic được sử dụng để thanh toán cho tính toán mà "
"triển khai sẽ thực hiện. Mã thanh toán được phép bao gồm logic tùy ý, mang "
"lại sự linh hoạt tối đa trong cách thức triển khai có thể được thanh toán "
"(ví dụ: mã thanh toán đơn giản nhất có thể sử dụng :ref:`ví chính <tokens-"
"purses-and-accounts>` của tài khoản, trong khi ứng dụng doanh nghiệp có thể "
"yêu cầu triển khai thanh toán qua một ứng dụng nhiều truy cập đồng thời vào "
"ví của công ty). Chúng tôi hạn chế giới hạn gas của việc thực thi mã thanh "
"toán, dựa trên tỷ lệ chuyển đổi hiện tại giữa gas và mote, sao cho không sử "
"dụng quá ``MAX_PAYMENT_COST`` (một hằng số của hệ thống). Để đảm bảo mã "
"thanh toán sẽ thanh toán cho việc tính toán của chính nó, chúng tôi chỉ cho "
"phép các tài khoản có số dư trong ví chính lớn hơn hoặc bằng "
"``MAX_PAYMENT_COST`` để thực hiện các đợt triển khai."

#: ../../implementation/execution-semantics.rst:75
msgid ""
"Payment code ultimately provides its payment by performing a :ref:`token "
"transfer <tokens-mint-interface>` into the `Handle Payment contract’s "
"payment purse <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/types/src/system/handle_payment/mod.rs#L65>`__."
" If payment is not given or not enough is transferred, then payment "
"execution is not considered successful. In this case the effects of the "
"payment code on the global state are reverted and the cost of the "
"computation is covered by motes taken from the offending account’s main "
"purse."
msgstr ""
"Mã thanh toán cuối cung cấp khoản thanh toán bằng cách thực hiện "
":ref:`chuyển token <tokens-mint-interface>` vào  `Ví thanh toán của hợp đồng"
" Handle Payment <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/types/src/system/handle_payment/mod.rs#L65>`__."
" Nếu không thanh toán hoặc không chuyển đủ, thì việc thực hiện thanh toán "
"không được coi là thành công. Trong trường hợp này, các tác động của mã "
"thanh toán đối với trạng thái toàn cục được hoàn nguyên và chi phí tính toán"
" được chi trả bằng một khoản tiền được lấy từ ví chính của tài khoản vi "
"phạm."

#: ../../implementation/execution-semantics.rst:84
msgid "Session code"
msgstr "Mã phiên"

#: ../../implementation/execution-semantics.rst:86
msgid ""
"*Session code* provides the main logic for the deploy. It is only executed "
"if the payment code is successful. The gas limit for this computation is "
"determined based on the amount of payment given (after subtracting the cost "
"of the payment code itself)."
msgstr ""
"*Mã phiên* cung cấp logic chính cho việc triển khai. Nó chỉ được thực hiện "
"nếu mã thanh toán thành công. Giới hạn gas cho phép tính này được xác định "
"dựa trên số tiền thanh toán đã cho (sau khi trừ chi phí của chính mã thanh "
"toán)."

#: ../../implementation/execution-semantics.rst:94
msgid "Specifying payment code and session code"
msgstr "Chỉ định mã thanh toán và mã phiên"

#: ../../implementation/execution-semantics.rst:96
msgid ""
"The user-defined logic of a deploy can be specified in a number of ways:"
msgstr ""
"Logic do người dùng xác định của một triển khai có thể được chỉ định theo "
"một số cách:"

#: ../../implementation/execution-semantics.rst:98
msgid ""
"a wasm module in binary format representing a valid :ref:`contract <global-"
"state-contracts>` (Note: the named keys do not need to be specified because "
"they come from the account the deploy is running in)"
msgstr ""
"một mô-đun wasm ở định dạng nhị phân đại diện cho một :ref:`contract "
"<global-state-contracts>` hợp lệ (Lưu ý: không cần chỉ định các khóa được "
"đặt tên vì chúng từ tài khoản mà đang chạy triển khai)"

#: ../../implementation/execution-semantics.rst:101
msgid ""
"a 32-byte identifier representing the :ref:`hash <global-state-hash-key>` or"
" :ref:`URef <global-state-uref>` where a contract is already stored in the "
"global state"
msgstr ""
"một mã định danh 32 byte đại diện cho :ref:`hash <global-state-hash-key>` "
"hoặc :ref:`URef <global-state-uref>` trong đó một hợp đồng đã được lưu trữ ở"
" trạng thái toàn cục"

#: ../../implementation/execution-semantics.rst:103
msgid ""
"a name corresponding to a named key in the account, where a contract is "
"stored under the key"
msgstr ""
"tên tương ứng với khóa được đặt tên trong tài khoản, nơi hợp đồng được lưu "
"trữ dưới khóa"

#: ../../implementation/execution-semantics.rst:106
msgid ""
"Each of payment and session code are independently specified, so different "
"methods of specifying them may be used (e.g. payment could be specified by a"
" hash key, while session is explicitly provided as a wasm module)."
msgstr ""
"Mỗi mã thanh toán và mã phiên được chỉ định độc lập, vì vậy có thể sử dụng "
"các phương pháp chỉ định chúng khác nhau (ví dụ: thanh toán có thể được chỉ "
"định bằng khóa băm, trong khi phiên được cung cấp rõ ràng dưới dạng mô-đun "
"wasm)."

#: ../../implementation/execution-semantics.rst:113
msgid "Deploys as functions on the global state"
msgstr "Triển khai dưới dạng các hàm trên trạng thái toàn cục"

#: ../../implementation/execution-semantics.rst:115
msgid ""
"To enable concurrent modification of :ref:`global state <global-state-head>`"
" (either by parallel deploys in the same block or parallel blocks on "
"different forks of the chain), we view each deploy as a function taking our "
"global state as input and producing a new global state as output. It is safe"
" to execute two such functions concurrently if they do not interfere with "
"each other, which formally can be defined to mean the functions *commute* "
"(i.e., if they were executed sequentially, it does not matter in what order "
"they are executed, the final result is the same for a given input). Whether "
"two deploys commute is determined based on the effects they have on the "
"global state, i.e. which operation (read, write, add) it does on each key in"
" the key-value store. How this is done is described in :ref:`Appendix C "
"<appendix-c>`."
msgstr ""
"Để cho phép sửa đổi đồng thời :ref:`trạng thái toàn cục <global-state-head>`"
" (bằng cách triển khai song song trong cùng một khối hoặc các khối song song"
" trên các nhánh khác nhau của chuỗi), chúng ta xem mỗi triển khai như một "
"hàm lấy trạng thái toàn cục làm đầu vào và tạo ra một trạng thái toàn cục "
"như đầu ra. Sẽ an toàn khi thực hiện đồng thời hai hàm như vậy nếu chúng "
"không can thiệp vào nhau, điều này chính thức có thể được định nghĩa là các "
"hàm *hoán đổi* (nghĩa là nếu chúng được thực thi tuần tự, không quan trọng "
"chúng được thực thi theo thứ tự nào, kết quả cuối cùng giống nhau đối với "
"một đầu vào nhất định). Hai lần triển khai hoán đổi được xác định dựa trên "
"tác động của chúng đối với trạng thái toàn cục, tức là thao tác nào (đọc, "
"ghi, thêm) nó thực hiện trên mỗi khóa trong kho khóa-giá trị. Cách thực hiện"
" điều này được mô tả trong :ref:`Phụ lục C <appendix-c>`."

#: ../../implementation/execution-semantics.rst:130
msgid "The CasperLabs runtime"
msgstr "Thời điểm chạy CasperLabs"

#: ../../implementation/execution-semantics.rst:132
msgid ""
"A wasm module is not natively able to create any effects outside of reading "
"/ writing from its own linear memory. To enable other effects (e.g. reading "
"/ writing to the CasperLabs global state), wasm modules must import "
"functions from the host environment they are running in. In the case of "
"contracts on the CasperLabs blockchain, this host is the CasperLabs Runtime."
" Here, we briefly describe the functionalities provided by imported "
"function. All these features are conveniently accessible via functions in "
"the `CasperLabs rust library <https://crates.io/crates/casperlabs-contract-"
"ffi>`__. For a more detailed description of the functions available for "
"contracts to import, see :ref:`Appendix A <appendix-a>`."
msgstr ""
"Mô-đun wasm không có khả năng tạo ra bất kỳ tác động nào ngoài việc đọc / "
"ghi từ bộ nhớ tuyến tính của chính nó. Để kích hoạt các tác động khác (ví "
"dụ: đọc / ghi vào trạng thái toàn cục của CasperLabs), mô-đun wasm phải nhập"
" các chức năng từ môi trường máy chủ mà chúng đang chạy. Trong trường hợp "
"hợp đồng trên chuỗi khối CasperLabs, máy chủ này là CasperLabs Runtime. Ở "
"đây, chúng tôi mô tả ngắn gọn các tính năng được cung cấp bởi hàm đã kết "
"nhập. Tất cả các tính năng này có thể truy cập thuận tiện thông qua các hàm "
"trong `thư viện rust CasperLabs <https://crates.io/crates/casperlabs-"
"contract-ffi>`__. Để có mô tả chi tiết hơn về các hàm có sẵn cho các hợp "
"đồng nhập đã kết nhập, hãy xem :ref:`Phụ lục A <appendix-a>`."

#: ../../implementation/execution-semantics.rst:141
msgid "Reading / writing from global state"
msgstr "Đọc / ghi từ trạng thái toàn cục"

#: ../../implementation/execution-semantics.rst:143
msgid ""
"``read``, ``write``, ``add`` functions allow working with exiting "
":ref:`URefs <uref-head>`"
msgstr ""
"hàm ``read``, ``write``, ``add`` cho phép làm việc với :ref:`URefs <uref-"
"head>`"

#: ../../implementation/execution-semantics.rst:145
msgid ""
"``new_uref`` allows creating a new ``URef`` initialized with a given value "
"(see section below about how ``URef``\\ s are generated)"
msgstr ""
"``new_uref`` cho phép tạo một ``URef`` mới được khởi tạo với một giá trị "
"nhất định (xem phần bên dưới về cách tạo ``URef``)"

#: ../../implementation/execution-semantics.rst:147
msgid ""
"``store_function`` allows writing a contract under a :ref:`hash key <global-"
"state-hash-key>`"
msgstr ""
"``store_function`` cho phép viết một hợp đồng theo :ref:`khoá băm<global-"
"state-hash-key>`"

#: ../../implementation/execution-semantics.rst:148
msgid ""
"``get_uref``, ``list_known_urefs``, ``add_uref``, ``remove_uref`` allow "
"working with the :ref:`named keys <global-state-contracts>` of the current "
"context (account or contract)"
msgstr ""
"``get_uref``, ``list_known_urefs``, ``add_uref``, ``remove_uref`` cho phép "
"làm việc với :ref:`khoá được đặt tên <global-state-contracts>` của ngữ cảnh "
"hiện tại (tài khoản hoặc hợp đồng)"

#: ../../implementation/execution-semantics.rst:152
msgid "Account functionality"
msgstr "Chức năng tài khoản"

#: ../../implementation/execution-semantics.rst:154
msgid ""
"``add_associated_key``, ``remove_associated_key``, "
"``update_associated_key``, ``set_action_threshold`` support the various "
":ref:`key management actions <accounts-key-management>`"
msgstr ""
"``add_associated_key``, ``remove_associated_key``, "
"``update_associated_key``, ``set_action_threshold`` hỗ trợ :ref:`hoạt động "
"quản lý khoá <accounts-key-management>` khác nhau"

#: ../../implementation/execution-semantics.rst:157
msgid ""
"``main_purse`` returns the :ref:`main purse <tokens-purses-and-accounts>` of"
" the account"
msgstr ""
"``main_purse`` trả về :ref:`ví chính <tokens-purses-and-accounts>` của tài "
"khoản"

#: ../../implementation/execution-semantics.rst:160
msgid "Runtime flow and properties"
msgstr "Thời điểm chạy luồng và thuộc tính"

#: ../../implementation/execution-semantics.rst:162
msgid ""
"``call_contract`` allows executing a contract stored under a key (hash or "
"``URef``), including passing arguments and getting a return value"
msgstr ""
"``call_contract`` cho phép thực hiện một hợp đồng được lưu trữ dưới một khóa"
" (băm hoặc ``URef``), bao gồm việc truyền các đối số và nhận giá trị trả về"

#: ../../implementation/execution-semantics.rst:164
msgid ""
"``ret`` is used by contracts to return a value to their caller (i.e. enables"
" return values from ``call_contract``)"
msgstr ""
"``ret`` được sử dụng bởi các hợp đồng để trả về một giá trị cho hàm gọi (tức"
" là cho phép trả về các giá trị từ ``call_contract``)"

#: ../../implementation/execution-semantics.rst:166
msgid ""
"``get_named_arg`` allows getting arguments passed to the contract (either to"
" session code as part of the deploy, or arguments to ``call_contract``)"
msgstr ""
"``get_named_arg`` cho phép nhận các đối số được truyền cho hợp đồng (hoặc "
"cho mã phiên như một phần của triển khai hoặc các đối số cho "
"``call_contract``)"

#: ../../implementation/execution-semantics.rst:168
msgid ""
"``revert`` exits the entire executing deploy, reverting any effects it "
"caused, and returns a status code that is captured in the block"
msgstr ""
"``revert`` thoát toàn bộ triển khai đang thực thi, hoàn nguyên bất kỳ tác "
"động nào mà nó gây ra và trả về mã trạng thái được ghi lại trong khối"

#: ../../implementation/execution-semantics.rst:170
msgid ""
"``get_caller`` returns the public key of the account for the current deploy "
"(can be used for control flow based on specific users of the blockchain)"
msgstr ""
"``get_caller`` trả về khóa công khai của tài khoản cho triển khai hiện tại "
"(có thể được sử dụng cho luồng kiểm soát dựa trên những người dùng cụ thể "
"của chuỗi khối)"

#: ../../implementation/execution-semantics.rst:172
msgid ""
"``get_phase`` returns the current :ref:`phase <execution-semantics-phases>` "
"of the deploy execution"
msgstr ""
"``get_phase`` trả về :ref:`giai đoạn <execution-semantics-phases>` hiện tại "
"của quá trình triển khai"

#: ../../implementation/execution-semantics.rst:175
msgid ""
"``get_blocktime`` gets the timestamp of the block this deploy will be "
"included in"
msgstr ""
"``get_blocktime`` lấy dấu thời gian của khối mà triển khai này sẽ được đưa "
"vào"

#: ../../implementation/execution-semantics.rst:178
msgid ":ref:`Mint <tokens-mints-and-purses>` functionality"
msgstr "Chức năng :ref:`Mint <tokens-mints-and-purses>`"

#: ../../implementation/execution-semantics.rst:180
msgid ""
"``create_purse`` creates a new empty purse, returning the ``URef`` to the "
"purse"
msgstr "``create_purse`` tạo một ví trống mới, trả về ``URef`` cho ví"

#: ../../implementation/execution-semantics.rst:181
msgid "``get_balance`` reads the balance of a purse"
msgstr "``get_balance`` đọc số dư của ví"

#: ../../implementation/execution-semantics.rst:182
msgid ""
"``transfer_to_account`` transfers from the present account’s main purse to "
"the main purse of a specified account (creating the account if it does not "
"exist)"
msgstr ""
"``transfer_to_account`` chuyển từ ví chính của tài khoản hiện tại sang ví "
"chính của một tài khoản được chỉ định (tạo tài khoản nếu nó không tồn tại)"

#: ../../implementation/execution-semantics.rst:185
msgid ""
"``transfer_from_purse_to_account`` transfer from a specified purse to the "
"main purse of a specified account (creating the account if it does not "
"exist)"
msgstr ""
"``transfer_from_purse_to_account`` chuyển từ một ví cụ thể sang ví chính của"
" một tài khoản được chỉ định (tạo tài khoản nếu nó không tồn tại)"

#: ../../implementation/execution-semantics.rst:187
msgid ""
"``transfer_from_purse_to_purse`` alias for the :ref:`mint’s transfer "
"function <tokens-mint-interface>`"
msgstr ""
"``transfer_from_purse_to_purse`` alias cho :ref:`hàm trao đổi mint <tokens-"
"mint-interface>`"

#: ../../implementation/execution-semantics.rst:193
msgid "Generating ``URef``\\ s"
msgstr "Tạo ``URef``"

#: ../../implementation/execution-semantics.rst:195
msgid ""
"``URef``\\ s are generated using a `cryptographically secure random number "
"generator <https://rust-"
"random.github.io/rand/rand_chacha/struct.ChaCha20Rng.html>`__ using the "
"`ChaCha algorithm <https://cr.yp.to/chacha.html>`__. The random number "
"generator is seeded by taking the ``blake2b256`` hash of the deploy hash "
"concatenated with an index representing the current phase of execution (to "
"prevent collisions between ``URef``\\ s generated in different phases of the"
" same deploy)."
msgstr ""
"``URef`` được tạo bằng cách sử dụng `trình tạo số ngẫu nhiên an toàn bằng "
"mật mã <https://rust-"
"random.github.io/rand/rand_chacha/struct.ChaCha20Rng.html>`__  bằng cách sử "
"dụng `thuật toán ChaCha <https://cr.yp.to/chacha.html>`__. Trình tạo số ngẫu"
" nhiên được tạo seed bằng cách lấy băm ``blake2b256`` của băm triển khai kết"
" hợp với một chỉ mục đại diện cho giai đoạn thực thi hiện tại (để ngăn chặn "
"xung đột giữa các ``URef`` được tạo trong các giai đoạn khác nhau của cùng "
"một triển khai) ."
