# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Quang Huy Tran <tqhuy2018@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:48+0000\n"
"Last-Translator: Quang Huy Tran <tqhuy2018@gmail.com>, 2021\n"
"Language-Team: Vietnamese (https://www.transifex.com/caspernetwork/teams/122124/vi/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: vi\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../implementation/global-state.rst:4
msgid "Global State"
msgstr "Trạng thái toàn cục"

#: ../../implementation/global-state.rst:9
msgid "Introduction"
msgstr "Giới thiệu"

#: ../../implementation/global-state.rst:11
msgid ""
"The “global state” is the storage layer for the blockchain. All accounts, "
"contracts, and any associated data they have are stored in the global state."
" Our global state has the semantics of a key-value store (with additional "
"permissions logic since not all users can access all values in the same "
"way). Refer to :ref:`Keys and Permissions <serialization-standard-state-"
"keys>` for further information on keys. Each block causes changes to this "
"global state because of the execution of the deploys it contains. For "
"validators to efficiently judge the correctness of these changes, "
"information about the new state needs to be communicated succinctly. "
"Moreover, we need to communicate pieces of the global state to users while "
"allowing them to verify the correctness of the parts they receive. For these"
" reasons, the key-value store is implemented as a :ref:`Merkle trie <global-"
"state-trie>`."
msgstr ""
"“Trạng thái toàn cục” là lớp lưu trữ cho chuỗi khối. Tất cả các tài khoản, "
"hợp đồng và bất kỳ dữ liệu liên quan nào họ có đều được lưu trữ ở trạng thái"
" toàn cục. Trạng thái toàn cục của chúng tôi có ngữ nghĩa của kho khóa-giá "
"trị (với logic cấp quyền bổ sung vì không phải tất cả người dùng đều có thể "
"truy cập tất cả các giá trị theo cùng một cách). Tham khảo :ref:`Khoá và "
"quyền <serialization-standard-state-keys>` để biết thêm thông tin về các "
"khoá. Mỗi khối gây ra các thay đổi đối với trạng thái toàn cục này do việc "
"thực thi các triển khai mà nó có. Để người xác thực có thể đánh giá hiệu quả"
" tính đúng đắn của những thay đổi này, thông tin về trạng thái mới cần được "
"truyền đạt một cách ngắn gọn. Hơn nữa, chúng ta cần truyền đạt các phần của "
"trạng thái toàn cục cho người dùng đồng thời cho phép họ xác minh tính đúng "
"đắn của các phần mà họ nhận được. Vì những lý do này, kho khóa-giá trị được "
"triển khai dưới dạng :ref:`Merkle trie <global-state-trie>`."

#: ../../implementation/global-state.rst:26
msgid "Merkle trie structure"
msgstr "Cấu trúc Merkle trie"

#: ../../implementation/global-state.rst:28
msgid ""
"At a high level, a Merkle trie is a key-value store data structure that can "
"be shared piece-wise in a verifiable way (via a construction called a Merkle"
" proof). Each node is labeled by the hash of its data. Leaf nodes are "
"labeled with the hash of their data. Non-leaf nodes are labeled with the "
"hash of the labels of their child nodes."
msgstr ""
"Ở mức độ cao, Merkle trie là một cấu trúc dữ liệu lưu trữ khóa-giá trị có "
"thể được chia sẻ từng phần theo cách có thể xác minh được (thông qua một cấu"
" trúc được gọi là bằng chứng Merkle). Mỗi nút được gắn nhãn bằng băm dữ liệu"
" của nó. Các nút lá được gắn nhãn bằng băm dữ liệu của chúng. Các nút không "
"phải lá được gắn nhãn bằng giá trị băm nhãn các nút con của chúng."

#: ../../implementation/global-state.rst:31
msgid ""
"Our implementation of the trie has radix of 256, meaning each branch node "
"can have up to 256 children. A path through the tree can be an array of "
"bytes, and serialization directly links a key with a path through the tree "
"as its associated value."
msgstr ""
"Việc triển khai trie của chúng ta có cơ số là 256, nghĩa là mỗi nút nhánh có"
" thể có tối đa 256 nút con. Một đường dẫn dạng cây có thể là một mảng byte "
"và trình tự liên kết trực tiếp một khóa với một đường dẫn dạng cây như là "
"giá trị liên kết của nó."

#: ../../implementation/global-state.rst:33
msgid "Formally, a trie node is one of the following:"
msgstr "Về mặt hình thức, một nút trie là một trong những nút sau:"

#: ../../implementation/global-state.rst:35
msgid "a leaf, which includes a key and a value"
msgstr "một lá, bao gồm một khóa và một giá trị"

#: ../../implementation/global-state.rst:36
msgid ""
"a branch, which has up to 256 ``blake2b256`` hashes, pointing to up to 256 "
"other nodes in the trie (recall each node is labeled by its hash)"
msgstr ""
"một nhánh, có tới 256 băm ``blake2b256``, trỏ đến tối đa 256 nút khác trong "
"trie (mỗi nút được gắn nhãn bởi hàm băm của nó)"

#: ../../implementation/global-state.rst:38
msgid ""
"an extension node, which includes a byte array (called the affix) and a "
"``blake2b256`` hash pointing to another node in the trie"
msgstr ""
"một nút mở rộng, bao gồm một mảng byte (gọi là thêm vào) và một băm "
"``blake2b256`` trỏ đến một nút khác trong trie"

#: ../../implementation/global-state.rst:41
msgid ""
"The purpose of the extension node is to allow path compression. Consider an "
"example where all keys use the same first four bytes for values in the trie."
" In this case, it would be inefficient to traverse through four branch nodes"
" where there is only one choice; instead, the root node of the trie could be"
" an extension node with affix equal to those first four bytes and pointer to"
" the first non-trivial branch node."
msgstr ""
"Mục đích của nút mở rộng là cho phép nén đường dẫn. Hãy xem xét một ví dụ "
"trong đó tất cả các khóa sử dụng bốn byte đầu tiên giống nhau cho các giá "
"trị trong trie. Trong trường hợp này, sẽ không hiệu quả nếu qua bốn nút "
"nhánh chỉ với một lựa chọn; thay vào đó, nút gốc của trie có thể là một nút "
"mở rộng với việc thêm vào bốn byte đầu tiên và trỏ đến nút nhánh quan trọng "
"đầu tiên."

#: ../../implementation/global-state.rst:46
msgid "The rust implementation of our trie can be found on GitHub:"
msgstr "Việc triển khai rust trên trie của chúng ta có thể xem trên GitHub:"

#: ../../implementation/global-state.rst:48
msgid ""
"`definition of the trie data structure <https://github.com/CasperLabs"
"/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie/mod.rs#L320>`_"
msgstr ""
"`định nghĩa cấu trúc dữ liệu trie <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie/mod.rs#L320>`_"

#: ../../implementation/global-state.rst:49
msgid ""
"`reading from the trie <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie_store/operations/mod.rs#L37>`_"
msgstr ""
"`đọc từ trie <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie_store/operations/mod.rs#L37>`_"

#: ../../implementation/global-state.rst:50
msgid ""
"`writing to the trie <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie_store/operations/mod.rs#L638>`_"
msgstr ""
"`viết mã cho trie <https://github.com/CasperLabs/casper-"
"node/blob/cb1d20ad1ea6e245cd8237f9406885a1e785c669/execution_engine/src/storage/trie_store/operations/mod.rs#L638>`_"

#: ../../implementation/global-state.rst:52
msgid ""
"Note: Conceptually, each block has its trie because the state changes based "
"on the deploys it contains. For this reason, our implementation has a notion"
" of a ``TrieStore``, which allows us to look up the root node for each trie."
msgstr ""
"Lưu ý: Về mặt khái niệm, mỗi khối có trie của nó vì trạng thái thay đổi dựa "
"trên các triển khai mà nó chứa. Vì lý do này, việc triển khai của chúng ta "
"có khái niệm về `` TrieStore '', cho phép chúng ta tra cứu nút gốc cho mỗi "
"trie."
