# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Quang Huy Tran <tqhuy2018@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: Quang Huy Tran <tqhuy2018@gmail.com>, 2021\n"
"Language-Team: Vietnamese (https://www.transifex.com/caspernetwork/teams/122124/vi/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: vi\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:3
msgid "Rust"
msgstr "Rust"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:5
msgid ""
"This section explains step by step how to write a new smart contract on "
"Casper.  Start with ``main.rs`` from the previous section."
msgstr ""
"Phần này giải thích từng bước cách viết hợp đồng thông minh mới trên Casper."
" Bắt đầu với `` main.rs '' từ phần trước."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:8
msgid "A Basic Smart Contract in Rust"
msgstr "Hợp đồng Thông minh cơ bản trong Rust"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:10
msgid ""
"The Casper VM executes a smart contract by calling the ``call`` function "
"specified in the contract. If the function is missing, the smart contract is"
" not valid. The simplest possible example is an empty ``call`` function."
msgstr ""
"Máy ảo Casper thực thi hợp đồng thông minh bằng cách gọi hàm ``call`` được "
"chỉ định trong hợp đồng. Nếu thiếu chức năng, hợp đồng thông minh không hợp "
"lệ. Ví dụ đơn giản nhất có thể là một hàm ``call`` trống."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:17
msgid ""
"The ``#[no_mangle]`` attribute prevents the compiler from changing "
"(mangling) the function name when converting to the binary format of Wasm. "
"Without it, the VM exits with the error message: ``Module doesn't have "
"export call``."
msgstr ""
"Thuộc tính ``# [no_mangle] `` ngăn trình biên dịch thay đổi (mangling) tên "
"hàm khi chuyển đổi sang định dạng nhị phân của Wasm. Nếu không có nó, máy ảo"
" sẽ thoát với thông báo lỗi: ``Mô-đun không có hàm call export``."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:20
msgid "Arguments"
msgstr "Đối số"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:22
msgid ""
"It's possible to pass arguments to smart contracts. To leverage this "
"feature, use `runtime::get_named_arg <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.get_named_arg.html>`_."
msgstr ""
"Có thể chuyển các đối số cho các hợp đồng thông minh. Để tận dụng tính năng "
"này, hãy sử dụng `runtime::get_named_arg <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.get_named_arg.html>`_."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:35
msgid "Storage"
msgstr "Lưu trữ"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:37
msgid ""
"Saving and reading values to and from the blockchain is a manual process in "
"Casper. It requires more code to be written, but also provides a lot of "
"flexibility. The storage system works similarly to a file system in an "
"operating system.  Let's say we have a string ``\"Hello Casper!\"`` that "
"needs to be saved. To do this, use the text editor, create a new file, paste"
" the string in and save it under a name in some directory. The pattern is "
"similar on the Casper blockchain. First you have to save your value to the "
"memory using `storage::new_uref <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/storage/fn.new_uref.html>`_. "
"This returns a reference to the memory object that holds the ``\"Hello "
"Casper!\"`` value. You could use this reference to update the value to "
"something else. It's like a file. Secondly you have to save the reference "
"under a human-readable string using `runtime::put_key <https://docs.rs"
"/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.put_key.html>`_. "
"It's like giving a name to the file. The following function implements this "
"scenario:"
msgstr ""
"Lưu và đọc các giá trị đến và đi từ chuỗi khối là một quy trình thủ công "
"trong Casper. Nó đòi hỏi viết nhiều mã hơn, nhưng cũng cung cấp rất nhiều "
"tính linh hoạt. Hệ thống lưu trữ hoạt động tương tự như hệ thống tệp trong "
"hệ điều hành. Giả sử chúng ta có một chuỗi ``\"Hello Casper!\"`` cần được "
"lưu. Để thực hiện việc này, hãy sử dụng trình soạn thảo văn bản, tạo một tệp"
" mới, dán chuỗi vào và lưu nó dưới một tên trong thư mục nào đó. Mô hình "
"tương tự trên blockchain Casper. Đầu tiên, bạn phải lưu giá trị của mình vào"
" bộ nhớ bằng cách sử dụng ``storage::new_uref <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/storage/fn.new_uref.html>`_. "
"Điều này trả về một tham chiếu đến đối tượng bộ nhớ có giá trị `` \"Hello "
"Casper!\" ``. Bạn có thể sử dụng tham chiếu này để cập nhật giá trị cho một "
"thứ khác. Nó giống như một tệp. Thứ hai, bạn phải lưu tham chiếu dưới một "
"chuỗi mà con người có thể đọc được bằng cách sử dụng `rruntime::put_key "
"<https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.put_key.html>`_. Nó "
"giống như việc đặt tên cho tệp. Hàm sau thực hiện kịch bản này:"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:54
msgid ""
"After this function is executed, the context (Account or Smart Contract) "
"will have the content of the ``value`` stored under ``KEY`` in its named "
"keys space. The named keys space is a key-value storage that every context "
"has. It's like a home directory."
msgstr ""
"Sau khi chức năng này được thực thi, ngữ cảnh (Tài khoản hoặc Hợp đồng thông"
" minh) sẽ có nội dung của ``value`` được lưu trữ dưới ``KEY`` trong không "
"gian khóa được đặt tên của nó. Không gian khóa được đặt tên là nơi lưu trữ "
"khóa-giá trị mà mọi ngữ cảnh đều có. Nó giống như một thư mục chính."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:57
msgid "Final Smart Contract"
msgstr "Hợp đồng thông minh cuối"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:59
msgid ""
"The code below is the simple contract generated by `cargo-casper "
"<https://crates.io/crates/cargo-casper>`_  (found in "
"``contract/src/main.rs`` of a project created by the tool). It reads an "
"argument and stores it in the memory under a key named "
"``\"special_value\"``."
msgstr ""
"Đoạn mã dưới đây là hợp đồng đơn giản được tạo bởi `cargo-casper "
"<https://crates.io/crates/cargo-casper>`_ (trong ``contract/src/main.rs`` "
"của một dự án được tạo bởi dụng cụ). Nó đọc một đối số và lưu trữ nó trong "
"bộ nhớ dưới một khóa có tên là ``\"special_value\"``."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:97
msgid "Using Error Codes"
msgstr "Sử dụng mã lỗi"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:99
msgid ""
"The Casper VM supports error codes in smart contracts. A contract can stop "
"execution and exit with a given error via the `runtime::revert "
"<https://docs.rs/casper-contract>`_ function:"
msgstr ""
"Casper VM hỗ trợ mã lỗi trong hợp đồng thông minh. Hợp đồng có thể ngừng "
"thực thi và thoát với một lỗi nhất định thông qua hàm `runtime::revert "
"<https://docs.rs/casper-contract>`_:"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:111
msgid ""
"Casper has `several built-in error variants <https://crates.io/crates"
"/casper-types/latest/casper_types/>`_ , but it's possible to create a custom"
" set of error codes for your smart contract. These can be passed to "
"`runtime::revert <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.revert.html>`_ via  "
"`ApiError::User(<your error code>) <https://docs.rs/casper-"
"types/latest/casper_types/enum.ApiError.html#variant.User>`_."
msgstr ""
"Casper có `` một số biến thể lỗi tích hợp sẵn <https://crates.io/crates"
"/casper-types/latest/casper_types/>`_, nhưng bạn có thể tạo một bộ mã lỗi "
"tùy chỉnh cho hợp đồng thông minh của mình. Chúng có thể được chuyển tới "
"`runtime::revert <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/runtime/fn.revert.html>`_ thông"
" qua  `ApiError::User(<your error code>) <https://docs.rs/casper-"
"types/latest/casper_types/enum.ApiError.html#variant.User>`_."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:113
msgid ""
"When a contract exits with an error code, the exit code is visible in the "
"Block Explorer."
msgstr ""
"Khi hợp đồng thoát với mã lỗi, mã thoát sẽ hiển thị trong Block Explorer."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:116
msgid "Tests"
msgstr "Kiểm thử"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:118
msgid ""
"As part of the Casper local environment we provide the in-memory virtual "
"machine you can run your contract against. The testing framework is designed"
" to be used in the following way:"
msgstr ""
"Là một phần của môi trường cục bộ Casper, chúng tôi cung cấp máy ảo trong bộ"
" nhớ mà bạn có thể chạy theo hợp đồng của mình. Khung kiểm thử được thiết kế"
" để sử dụng theo cách sau:"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:121
msgid "Initialize the context."
msgstr "Khởi tạo ngữ cảnh."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:122
msgid "Deploy or call the smart contract."
msgstr "Triển khai hoặc gọi hợp đồng thông minh."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:123
msgid ""
"Query the context for changes and assert the result data matches expected "
"values."
msgstr ""
"Truy vấn ngữ cảnh cho các thay đổi và xác nhận dữ liệu kết quả khớp với các "
"giá trị mong đợi."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:126
msgid "TestContext"
msgstr "TestContext"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:128
msgid ""
"A  `TestContext <https://docs.rs/casper-engine-test-"
"support/latest/casper_engine_test_support/struct.TestContext.html>`_ "
"provides a virtual machine instance. It should be a mutable object as we "
"will change its internal data while making deploys. It's also important to "
"set an initial balance for the account to use for deploys."
msgstr ""
"`TestContext <https://docs.rs/casper-engine-test-"
"support/latest/casper_engine_test_support/struct.TestContext.html>`_ cung "
"cấp một phiên bản máy ảo. Nó phải là một đối tượng có thể thay đổi vì chúng "
"tôi sẽ thay đổi dữ liệu bên trong của nó trong khi triển khai. Điều quan "
"trọng là phải đặt số dư ban đầu cho tài khoản để sử dụng cho các đợt triển "
"khai."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:138
msgid "Account is type of ``[u8; 32]``. Balance is type of ``U512``."
msgstr "Tài khoản là kiểu ``[u8; 32]``. Số dư là kiểu ``U512``."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:141
msgid "Run Smart Contract"
msgstr "Chạy Hợp đồng Thông minh"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:143
msgid ""
"Before we can deploy the contract to the context, we need to prepare the "
"request. We call the request a `Session <https://docs.rs/casper-engine-test-"
"support/latest/casper_engine_test_support/struct.Session.html>`_. Each "
"session call should have 4 elements:"
msgstr ""
"Trước khi có thể triển khai hợp đồng với ngữ cảnh, chúng ta cần chuẩn bị yêu"
" cầu. Chúng ta gọi yêu cầu là phiên (`Session <https://docs.rs/casper-"
"engine-test-"
"support/latest/casper_engine_test_support/struct.Session.html>`_). Mỗi cuộc "
"gọi phiên phải có 4 phần tử:"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:146
msgid "Wasm file path."
msgstr "Đường dẫn tệp Wasm"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:147
msgid "List of arguments."
msgstr "Danh sách đối số"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:148
msgid "Account context of execution."
msgstr "Ngữ cảnh tài khoản thực thi."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:149
msgid ""
"List of keys that authorize the call. See: TODO insert keys management link."
msgstr ""
"Danh sách các khoá cho phép cuộc gọi. Xem: TODO thêm liên kết quản lý khóa."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:163
msgid "Executing ``run`` will panic if the code execution fails."
msgstr ""
"Việc thực thi ``run`` sẽ gây lo lắng nếu quá trình thực thi mã không thành "
"công."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:166
msgid "Query and Assert"
msgstr "Truy vấn và xác nhận"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:168
msgid ""
"The smart contract we deployed creates a new value ``\"hello world\"`` under"
" the key ``\"special_value\"``. Using the ``query`` function it's possible "
"to extract this value from the blockchain."
msgstr ""
"Hợp đồng thông minh mà chúng tôi đã triển khai tạo ra một giá trị mới "
"```\"hello world\"`` dưới khoá ``\"special_value\"``. Sử dụng hàm ``query``,"
" bạn có thể trích xuất giá trị này từ chuỗi khối."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:178
msgid ""
"Note that the ``expected_value`` is a ``String`` type lifted to the "
"``Value`` type. It was also possible to map ``returned_value`` to the "
"``String`` type."
msgstr ""
"Lưu ý rằng ``expected_value`` là kiểu``String`` được nâng lên thành kiểu "
"``Value``. Cũng có thể ánh xạ ``returned_value`` thành kiểu ``String``."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:181
msgid "Final Test"
msgstr "Lần kiểm thử cuối cùng"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:183
msgid ""
"The code below is the simple test generated by `cargo-casper "
"<https://crates.io/crates/cargo-casper>`_ (found in "
"``tests/src/integration_tests.rs`` of a project created by the tool)."
msgstr ""
"Đoạn mã dưới đây là bài kiểm thử đơn giản được tạo bởi `cargo-casper "
"<https://crates.io/crates/cargo-casper>`_ (trong "
"``tests/src/integration_tests.rs`` của một dự án được tạo bởi dụng cụ)."

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:229
msgid "WASM File Size"
msgstr "Kích thước tệp WASM"

#: ../../dapp-dev-guide/writing-contracts/writing-rust-contracts.rst:231
msgid ""
"We encourage shrinking the WASM file size as much as possible. Smaller "
"deploys cost less and save the network bandwidth. We recommend reading "
"`Shrinking .wasm Code Size <https://rustwasm.github.io/docs/book/reference"
"/code-size.html>`_ chapter of `The Rust Wasm Book "
"<https://rustwasm.github.io/docs/book/>`_."
msgstr ""
"Chúng tôi khuyến khích thu nhỏ kích thước tệp WASM càng nhiều càng tốt. Các "
"triển khai nhỏ hơn có chi phí thấp hơn và tiết kiệm băng thông mạng. Chúng "
"tôi khuyên bạn nên đọc chương `Shrinking .wasm Code Size "
"<https://rustwasm.github.io/docs/book/reference/code-size.html>`_ của The "
"Rust Wasm Book <https://rustwasm.github.io/docs/book/>`_."
