# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Quang Huy Tran <tqhuy2018@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: Quang Huy Tran <tqhuy2018@gmail.com>, 2021\n"
"Language-Team: Vietnamese (https://www.transifex.com/caspernetwork/teams/122124/vi/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: vi\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:2
msgid "Advanced Optimization"
msgstr "Tối ưu hoá nâng cao"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:4
msgid ""
"During advanced development, you may wish to optimize the output of the DSL "
"for the blockchain once the base logic of your smart contract is in place. "
"This requires digging into the actual code that the DSL generates, and here "
"is where the `cargo expand <https://github.com/dtolnay/cargo-expand>`_ "
"command becomes a useful tool."
msgstr ""
"Trong quá trình phát triển nâng cao, bạn có thể muốn tối ưu hóa đầu ra của "
"DSL cho chuỗi khối khi logic cơ sở của hợp đồng thông minh của bạn đã có "
"sẵn. Điều này đòi hỏi phải đào sâu vào mã hiện tại mà DSL tạo ra và đây là "
"nơi lệnh `cargo expand <https://github.com/dtolnay/cargo-expand>`_ trở thành"
" một công cụ hữu ích."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:7
msgid "Expanding the Macros"
msgstr "Mở rộng Macros"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:8
msgid ""
"To see the code that the DSL generates, you can use the ``cargo expand`` "
"command. To install it, you can simply type the following in your terminal:"
msgstr ""
"Để xem mã mà DSL tạo ra, bạn có thể sử dụng lệnh ``cargo expand``. Để cài "
"đặt nó, bạn chỉ cần nhập thông tin sau vào thiết bị của mình:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:14
msgid "Once installed, you can go into your contract folder and type:"
msgstr "Sau khi cài đặt, bạn có thể vào thư mục hợp đồng của mình và nhập:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:20
msgid "To pipe it into a file for viewing, you can use this command:"
msgstr "Để chuyển nó thành một tệp để xem, bạn có thể sử dụng lệnh sau:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:26
msgid ""
"Once you view the output, you should see that the expanded file is much "
"larger and more complex than the contract we viewed a moment ago. The DSL "
"does a fantastic job of abstracting all this boilerplate code away from the "
"development process."
msgstr ""
"Khi bạn xem kết quả đầu ra, bạn sẽ thấy rằng tệp được mở rộng lớn hơn và "
"phức tạp hơn nhiều so với hợp đồng mà chúng ta đã xem trước đó. DSL thực "
"hiện một công việc tuyệt vời là trừu tượng hóa tất cả mã soạn sẵn này khỏi "
"quá trình phát triển."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:28
msgid ""
"You usually do not need to generate the expanded code. When the Rust "
"compiler encounters each of the macros, it expands the code in place. The "
"resultant expanded code is then compiled to a WASM binary, which can then be"
" deployed to the blockchain."
msgstr ""
"Bạn thường không cần tạo mã mở rộng. Khi trình biên dịch Rust gặp từng "
"macro, nó sẽ mở rộng mã tại chỗ. Sau đó, mã mở rộng kết quả được biên dịch "
"thành tệp nhị phân WASM, mã này sau đó có thể được triển khai vào chuỗi "
"khối."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:30
msgid ""
"Also, keep in mind that once you have expanded and changed the generated "
"code, you should remove the macros from the project configuration before "
"saving the changes and building it."
msgstr ""
"Ngoài ra, hãy nhớ rằng khi bạn đã mở rộng và thay đổi mã đã tạo, bạn nên xóa"
" macro khỏi cấu hình dự án trước khi lưu các thay đổi và xây dựng nó."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:33
msgid "Building and Testing the Hello World Contract"
msgstr "Xây dựng và kiểm thử Hello World Contract"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:34
msgid ""
"By building and testing the `Hello World <https://github.com/casper-"
"ecosystem/hello-world>`_ contract, you can see how the DSL expands the "
"macros."
msgstr ""
"Bằng cách xây dựng và thử nghiệm hợp đồng ``Hello World <https://github.com"
"/casper-ecosystem/hello-world>`_, bạn có thể thấy cách DSL mở rộng các "
"macro."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:36
msgid ""
"The build process is identical to the one used in the `Getting Started "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-rust-contract-"
"sdk.html>`_ section, but here we do not have the *build.rs* script that was "
"used before. The following steps will help you manually build the contract."
msgstr ""
"Quy trình xây dựng giống với quy trình được sử dụng trong phần `Bắt đầu "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-rust-contract-"
"sdk.html>`_, nhưng ở đây chúng ta không có tập lệnh *build.rs* đã được sử "
"dụng trước đây. Các bước sau đây sẽ giúp bạn xây dựng hợp đồng theo cách thủ"
" công."

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:38
msgid "First, we need to add the WASM target:"
msgstr "Trước hết chúng ta cần thêm mục tiêu của WASM:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:44
msgid "Next, build the contract into a WASM binary:"
msgstr "Tiếp theo, xây dựng hợp đồng thành tệp nhị phân WASM:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:50
msgid ""
"Then we can copy the WASM file into the ``tests`` folder and run the tests:"
msgstr ""
"Sau đó, chúng tôi có thể sao chép tệp WASM vào thư mục ``tests`` và chạy các"
" bài kiểm thử:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:57
msgid ""
"If you successfully ran the two tests (``should_run`` and "
"``should_update``), the DSL properly expanded your macros, built the binary,"
" executed the contract, and called the update function. You should see an "
"output similar to this if it worked correctly:"
msgstr ""
"Nếu bạn đã chạy thành công hai bài kiểm tra (``should_run`` và "
"``should_update``), DSL đã mở rộng đúng cách các macro của bạn, tạo nhị "
"phân, thực thi hợp đồng và gọi hàm cập nhật. Bạn sẽ thấy một đầu ra tương tự"
" như thế này nếu nó hoạt động chính xác:"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:71
msgid "Using the Makefile"
msgstr "Sử dụng Makefile"

#: ../../dapp-dev-guide/contract-dsl/advanced.rst:72
msgid ""
"If you examine the repository contents, you’ll see that there is a Makefile."
" This is an alternative to using a build script, as we did in the `Getting "
"Started guide <https://docs.casperlabs.io/en/latest/dapp-dev-guide/setup-of-"
"rust-contract-sdk.html>`_. To duplicate the steps we took above, you would "
"simply run the following two commands in your terminal:"
msgstr ""
"Nếu bạn kiểm tra nội dung của kho lưu trữ, bạn sẽ thấy rằng có một Makefile."
" Đây là một giải pháp thay thế cho việc sử dụng tập lệnh xây dựng như chúng "
"tôi đã làm trong ``Hướng dẫn bắt đầu <https://docs.casperlabs.io/en/latest"
"/dapp-dev-guide/setup-of-rust-contract-sdk.html>`_. Để sao chép các bước "
"chúng tôi đã thực hiện ở trên, bạn chỉ cần chạy hai lệnh sau trong thiết bị "
"của mình:"
