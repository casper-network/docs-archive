# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../glossary/B.rst:2
msgid "B"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`A <A.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`B <B.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`C <C.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`D <D.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`E <E.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`F <F.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`G <G.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`H <H.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`I <I.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`J <J.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`K <K.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`L <L.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`M <M.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`N <N.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`O <O.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`P <P.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`Q <Q.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`R <R.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`S <S.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`T <T.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`U <U.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`V <V.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`W <W.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`X <X.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`Y <Y.html>`_"
msgstr ""

#: ../../glossary/B.rst:5
msgid "`Z <Z.html>`_"
msgstr ""

#: ../../glossary/B.rst:9
msgid "Block"
msgstr ""

#: ../../glossary/B.rst:10
msgid "Used in two contexts:"
msgstr ""

#: ../../glossary/B.rst:12
msgid ""
"A data structure containing a collection of transactions. Blocks form the"
" primary structure of the blockchain."
msgstr ""

#: ../../glossary/B.rst:13
msgid ""
"A message that is exchanged between nodes containing the data structure "
"as explained in (1)."
msgstr ""

#: ../../glossary/B.rst:15
msgid ""
"Each block has a globally unique ID, achieved by hashing the contents of "
"the block."
msgstr ""

#: ../../glossary/B.rst:17
msgid ""
"Each block points to its parent. An exception is the first block, which "
"has no parent."
msgstr ""

#: ../../glossary/B.rst:20
msgid "Block creation"
msgstr ""

#: ../../glossary/B.rst:21
msgid ""
"Block creation means computing the deployment results and collecting the "
"results that belong together into a block. We follow a process called "
"*execution after consensus*."
msgstr ""

#: ../../glossary/B.rst:23
msgid ""
"The `block proposal <B.html#block-proposal>`_ happens first, and the "
"proposed `proto block <P.html#proto-block>`_ contains a set of deploys "
"that have not been executed yet."
msgstr ""

#: ../../glossary/B.rst:25
msgid ""
"Only after consensus on a *proto block* has been reached, the deploys are"
" executed. The resulting new global state `root hash <R.html#root hash>`_"
" is put into an actual block, together with the executed deploys."
msgstr ""

#: ../../glossary/B.rst:27
msgid "Note that only validators can create valid blocks."
msgstr ""

#: ../../glossary/B.rst:30
msgid "Block finality"
msgstr ""

#: ../../glossary/B.rst:31
msgid ""
"A block is \"finalized\" if the validators agree on adding it to the "
"blockchain."
msgstr ""

#: ../../glossary/B.rst:33
msgid ""
"There are different levels of *finality* in the `Highway "
"<H.html#highway>`_ protocol. A finalized block has a fault-tolerance *F*,"
" expressed as a fraction of the total stake. For an observer to see a "
"conflicting block as finalized, several validators whose total stake "
"exceeds *F* would have to collude and show different information in a way"
" that would ultimately be detected and punished (see `slashing "
"<S.html#slashing>`_)."
msgstr ""

#: ../../glossary/B.rst:36
msgid "Block gossiping"
msgstr ""

#: ../../glossary/B.rst:37
msgid ""
"Block gossiping occurs when a message containing a block is sent to one "
"or more nodes on the network. In other words, block gossiping is sending "
"a block validated by the current node but created by another node. The "
"terms *block gossiping* and <#block-passing> are interchangeable."
msgstr ""

#: ../../glossary/B.rst:40
msgid "Block passing"
msgstr ""

#: ../../glossary/B.rst:41
msgid "See <#block-gossiping>."
msgstr ""

#: ../../glossary/B.rst:44
msgid "Block processing"
msgstr ""

#: ../../glossary/B.rst:45
msgid ""
"Block processing consists of running the deploys in a block received from"
" another node to determine updates to the global state. Note that this is"
" an essential part of `block validating <B.html#block-validating>`_."
msgstr ""

#: ../../glossary/B.rst:48
msgid "Block proposal"
msgstr ""

#: ../../glossary/B.rst:49
msgid ""
"Sending a (newly) created block to the other nodes on the network for "
"potential inclusion in the blockchain. Note that this term applies to NEW"
" blocks only."
msgstr ""

#: ../../glossary/B.rst:52
msgid "Block validation"
msgstr ""

#: ../../glossary/B.rst:53
msgid ""
"The process of determining the validity of a block obtained from another "
"node on the network."
msgstr ""

#: ../../glossary/B.rst:56
msgid "Blockchain"
msgstr ""

#: ../../glossary/B.rst:57
msgid ""
"Blockchain is a P2P network where the collection of nodes (`validators "
"<V.html#validator>`_) concurrently updates a decentralized, shared "
"database. They do this collectively, building an ever-growing chain of "
"`transactions <T.html#transaction>`_. For performance reasons, "
"transactions are bundled in `blocks <#block>`_. According to a particular"
" cooperation protocol (consensus protocol), the collection of `nodes "
"<N.html#node>`_ connected via a P2P network cooperate to maintain this "
"shared database as a single source of truth. The database's current state"
" is called the `global state <G.html#global-state>`_ and has a sizeable "
"map-like collection."
msgstr ""

#: ../../glossary/B.rst:60
msgid "Block store"
msgstr ""

#: ../../glossary/B.rst:61
msgid ""
"The layer of the node software responsible for storing blocks. This layer"
" is persisted and can be used to allow a node to recover its state after "
"a crash."
msgstr ""

#: ../../glossary/B.rst:64
msgid "Bond"
msgstr ""

#: ../../glossary/B.rst:65
msgid ""
"The amount of money (in crypto-currency) that is allocated by a node in "
"order to participate in `consensus <C.html#consensus>`_ (and to be a "
"`validator <V.html#validator>`_)."
msgstr ""

#: ../../glossary/B.rst:68
msgid "Bonding"
msgstr ""

#: ../../glossary/B.rst:69
msgid ""
"Depositing money in the `auction contract<A.html#auction-contract>`_ and "
"try to become a `staker <S.html#staker>`_. The bonding request is a "
"transaction that transfers tokens to the auction contract. In the next "
"`booking block <B.html#booking-block>`_, a new set of validators is "
"determined, with weights according to their deposits. This new set "
"becomes active in the era(s) using that booking block."
msgstr ""

#: ../../glossary/B.rst:72
msgid "Booking block"
msgstr ""

#: ../../glossary/B.rst:73
msgid ""
"The booking block for an era is the block that determines the era's "
"validator set. In it, the `auction contract<A.html#auction-contract>`_ "
"selects the highest bidders to be the future era's validators. There is a"
" configurable delay, the *auction_delay*, which is the number of eras "
"between the booking block and the era to which it applies. The booking "
"block is always a switch block, so the booking block for era *N + "
"auction_delay + 1* is the last block of era *N*."
msgstr ""

