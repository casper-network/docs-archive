# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../dapp-dev-guide/solidity.rst:3
msgid "Transpiling Solidity to Rust"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:5
msgid ""
"**Introducing Caspiler - Transpile Solidity to Rust and access the cool "
"features of Casper!**"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:8
msgid "Smart Contracts on Casper"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:10
msgid ""
"The Casper Virtual Machine runs smart contracts that compile to "
"Webassembly. There are two ecosystems that provide compilation targets "
"for webassembly: Rust and AssemblyScript.  CasperLabs provides smart "
"contract libraries to support development for both of these languages. "
"The core development of the Casper Protocol is taking place in Rust, and "
"as a result, there are many Rust tools that make rapid Smart Contracts "
"development possible. It is widely recognized that most smart contracts "
"in use today have been authored in Solidity for the EVM (Ethereum Virtual"
" Machhine)."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:13 ../../dapp-dev-guide/solidity.rst:42
msgid "Solidity"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:15
msgid ""
"Without any doubt, the existence and simplicity of Solidity is one of the"
" key factors behind the growth of Ethereum. There is a large group of "
"developers for whom Solidity is still the best tool for expressing their "
"Smart Contract ideas. At CasperLabs we feel a strong connection with the "
"Ethereum community, so we decided to include support for Solidity via a "
"transpiler."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:18
msgid "Transpiler"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:20
msgid ""
"Transpiling is a well known process of turning code written in one high-"
"level language into another high-level language. At the moment the most "
"popular example is the TypeScript to JavaScript transpiler."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:22
msgid ""
"We have concluded that Solidity support is much easier and efficient to "
"achieve by transpiling Solidity to Rust, rather than by compiling "
"Solidity to WASM bytecode for the following reasons:"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:25
msgid ""
"Solidity features are easy to express in Rust, which is a much richer "
"language."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:26
msgid "The shape of CasperLabs DSL is similar to Solidity."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:27
msgid ""
"The CasperLabs Rust toolchain is something we want to leverage, rather "
"than coding it from scratch."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:28
msgid ""
"The Casper execution model is different than Ethereum's, therefore it's "
"easier to translate it on the language level, than on the bytecode level."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:31
msgid "Solidity to Rust Migration"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:33
msgid ""
"Having transpiler gives Smart Contract developers a powerful tool for the"
" migration of the existing Solidity source code to Rust if they wish to "
"use it."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:36
msgid "Simple Example"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:38
msgid ""
"Let's see how the Solidity code is being transpiled to the CasperLabs "
"Rust DSL. There is almost one to one translation of the core components: "
"``contract``\\ , ``constructor`` and ``method``."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:63
msgid "CasperLabs Rust DSL"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:89
msgid "ERC20"
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:91
msgid ""
"It is possible to transpile a complex Smart Contracts like ERC20 Token. "
"Full example with tests can be found in this `GitHub repository "
"<https://github.com/casper-ecosystem/erc20>`_."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:95
msgid "Deploying to Testnet."
msgstr ""

#: ../../dapp-dev-guide/solidity.rst:97
msgid ""
"Take a look at the deployment instructions in the dApp developer guide "
"for details."
msgstr ""

