# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../workflow/two-party-multi-sig.rst:2
msgid "Two-Party Multi-Signature Deploys"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:4
msgid ""
"`Accounts "
"<https://docs.casperlabs.io/en/latest/implementation/accounts.html>`_ on "
"a Casper Network can associate other accounts to allow or require a "
"multiple signature scheme for deploys."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:6
msgid ""
"This workflow describes how a trivial two-party multi-signature scheme "
"for signing and sending deploys can be enforced for an account on a "
"Casper Network."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:8
msgid "This workflow assumes:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:10
msgid "You meet the `prerequisites <setup.html>`_"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:11
msgid "You are using the Casper command-line client"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:12
msgid ""
"You have a main ``PublicKey`` hex (**MA**) and a ``PublicKey`` hex to "
"associate (**AA**)"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:13
msgid "You have a valid ``node-address``"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:14
msgid ""
"You have previously `deployed a smart contract "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/deploying-"
"contracts.html>`_ to a Casper Network"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:17
msgid "Configuring the Main Account"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:19
msgid ""
"**CAUTION**: Incorrect account configurations could render accounts "
"defunct and unusable. It is highly recommended to first execute any "
"changes to an account in a test environment like Testnet, before "
"performing them in a live environment like Mainnet."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:21
msgid ""
"Each account has an ``associated_keys`` field which is a list containing "
"the account address and its weight for every associated account. Accounts"
" can be associated by adding the account address to the "
"``associated_keys`` field."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:23
msgid ""
"An account on a Casper Network assigns weights to keys associated with "
"it. For a single key to sign a deploy or edit the state of the account, "
"its weight must be greater than or equal to a set threshold. The "
"thresholds are labeled as the ``action_thresholds`` for the account."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:25
msgid ""
"Each account within a Casper Network has two action thresholds that "
"manage the permissions to send deploys or manage the account. Each "
"threshold defines the minimum weight that a single key or a combination "
"of keys must have, to either:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:27
msgid "Send a deploy to the network; determined by the ``deployment`` threshold"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:28
msgid ""
"Edit the ``associated keys`` and the ``action_thresholds``; determined by"
" the ``key_management`` threshold"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:30
msgid ""
"To enforce the multi-signature (multi-sig) feature for an account on a "
"Casper Network, the *main key* and *associated key*'s combined weight "
"must be greater than or equal to the ``deployment`` threshold. This can "
"be achieved by having each key's weight equal to half of the "
"``deployment`` threshold."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:34
msgid "Code Description"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:36
msgid ""
"You can run session code that will execute within the context of your "
"main account. Below is the code that will be compiled to WASM and then "
"sent to the network as part of a deploy."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:38
msgid ""
"**Note**: The following contract example will set up a specific account "
"configuration and is not a general-purpose contract."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:68
msgid ""
"The contract will execute **2 crucial steps** to enforce the multi-sig "
"scheme for your main account:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:70
msgid "Add the associated key **AA** to the account"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:71
msgid ""
"Raise the ``deployment`` threshold to ``2``, such that the weight "
"required to send a deploy is split equally between the keys associated "
"with the account"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:73
msgid ""
"The action thresholds for deploys cannot be greater than the action "
"threshold for key management. By default, action thresholds are set to "
"``1``."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:76
msgid "Code Execution"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:78
msgid ""
"The state of the account can be altered by sending a deploy which "
"executes the WASM that will associate the **AA** account address."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:80
msgid ""
"For this guide, a smart contract has been written and is stored in its "
"`Github Repository <https://github.com/casper-ecosystem/two-party-multi-"
"sig>`_. The repository contains a `Makefile` with the build commands "
"necessary to compile the contract to generate the necessary WASM."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:88
msgid "To build the contract, run the following command:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:94
msgid "The compiled WASM will be saved on this path:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:101
msgid ""
"The Casper command-line client can be used to send the compiled WASM to "
"the network for execution."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:115
msgid "``node-address`` - An IP address of a node on the network"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:116
msgid ""
"``secret-key`` - The file name containing the secret key of the Main "
"Account"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:117
msgid ""
"``chain-name`` - The chain-name to the network where you wish to send the"
" deploy (this example uses the Testnet)"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:118
msgid "``payment-amount`` - The cost of the deploy"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:119
msgid "``session-path`` - The path to the contract WASM"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:120
msgid ""
"``session-arg`` - The contract takes the account hash of the Associated "
"account as an argument labeled ``deployment-account``. You can pass this "
"argument using the ``--session-arg`` flag in the command line client"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:123
msgid "**Important response fields:**"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:125
msgid ""
"``\"result\".\"deploy_hash\"`` - the address of the executed deploy, "
"needed to look up additional information about the transfer"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:127
msgid ""
"**Note**: Save the returned ``deploy_hash`` from the output to query "
"information about execution status."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:130
msgid "Confirming Execution and Account Status"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:132
msgid ""
"Account configuration on a Casper blockchain is stored in a `Merkle Tree "
"<https://docs.casperlabs.io/en/latest/glossary/M.html#merkle-tree>`_ and "
"is a snapshot of the blockchain's `Global State "
"<https://docs.casperlabs.io/en/latest/implementation/global-"
"state.html>`_. The representation of global state for a given block can "
"be computed by executing the deploys (including transfers) within the "
"block and its ancestors. The root node of the Merkle Tree identifying a "
"particular state is called the ``state-root-hash`` and is stored in every"
" executed block."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:134
msgid ""
"To check that your account was configured correctly, you need the "
"``state-root-hash`` corresponding to the block that contains your deploy."
" To obtain the ``state-root-hash``, you need to:"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:137
msgid ""
"`Confirm the execution status of the deploy <querying.html#querying-"
"deploys>`_ and obtain the hash of the block containing it"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:138
msgid ""
"`Query the block containing the deploy <querying.html#querying-blocks>`_ "
"to obtain the corresponding ``state_root_hash``"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:140
msgid ""
"Use the ``state_root_hash`` and the ``hex-encoded-public-key`` of the "
"main account to query the network for the account and check its "
"configuration."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:149
msgid "**Example Output**"
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:184
msgid ""
"In the above example, you can see the account addresses listed within the"
" ``associated_keys`` section. Each key has a weight of ``1``, since the "
"action threshold for ``deployment`` is set to ``2``, neither account is "
"able to sign and send a deploy individually. Thus to send the deploy from"
" the Main account, the deploy needs to be signed by the secret keys of "
"each account to reach the required threshold."
msgstr ""

#: ../../workflow/two-party-multi-sig.rst:188
msgid ""
"Details about various scenarios in which multiple associated keys can be "
"setup is discussed in `the examples section of the Multi-Signature "
"Tutorial <https://docs.casperlabs.io/en/latest/dapp-dev-guide/tutorials"
"/multi-sig/examples.html>`_."
msgstr ""

