# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# muss abahmane <elmabahma@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:48+0000\n"
"Last-Translator: muss abahmane <elmabahma@gmail.com>, 2021\n"
"Language-Team: French (https://www.transifex.com/caspernetwork/teams/122124/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../implementation/tokens.rst:4
msgid "Tokens"
msgstr "Jetons"

#: ../../implementation/tokens.rst:9
msgid "Introduction"
msgstr "Introduction"

#: ../../implementation/tokens.rst:11
msgid ""
"The Casper Network is a decentralized blockchain platform based on a Proof-"
"of-Stake consensus algorithm called `Highway "
"<https://github.com/CasperLabs/highway>`_. Having a unit of value is "
"required to make this system work because users must pay for computation, "
"and validators must have `stake "
"<https://docs.casperlabs.io/en/latest/staking/index.html>`_ to bond. In the "
"blockchain space, this unit of value is a *token*."
msgstr ""
"Le réseau Casper est une plateforme blockchain décentralisée basée sur un "
"algorithme de consensus Proof-of-Stake appelé `Highway "
"<https://github.com/CasperLabs/highway>`_. Avoir une unité de valeur est "
"nécessaire pour faire fonctionner ce système car les utilisateurs doivent "
"payer pour le calcul, et les validateurs doivent avoir un `stake "
"<https://docs.casperlabs.io/fr/latest/staking/index.html>`_ pour participer "
"à l'enchère (to bond). Dans l'espace blockchain, cette unité de valeur est "
"un *jeton*."

#: ../../implementation/tokens.rst:13
msgid ""
"This chapter describes how we define tokens and how one can use them on the "
"Casper platform."
msgstr ""
"Ce chapitre décrit comment nous définissons les jetons et comment on peut "
"les utiliser sur la plateforme Casper."

#: ../../implementation/tokens.rst:16
msgid "Token Generation and Distribution"
msgstr "Génération et distribution de jetons"

#: ../../implementation/tokens.rst:18
#, python-format
msgid ""
"A blockchain system generally needs to have a supply of tokens available to "
"pay for computation and reward validators for processing transactions on the"
" network. A great deal of effort has been taken to ensure that no single "
"individual or entity acquires more than 1% of the tokens from the onset."
msgstr ""
"Un système de blockchain doit généralement disposer d'une réserve de jetons "
"pour payer les calculs et récompenser les validateurs pour le traitement des"
" transactions sur le réseau. De nombreux efforts ont été déployés pour "
"s'assurer qu'aucun individu ou entité n'acquiert plus de 1 % des jetons dès "
"le départ."

#: ../../implementation/tokens.rst:20
msgid ""
"In addition to the initial supply, the system will have a low rate of "
"inflation, the results of which will be paid out to validators in the form "
"of seigniorage."
msgstr ""
"En plus de l'approvisionnement initial, le système aura un faible taux "
"d'inflation, dont les résultats seront versés aux validateurs sous forme de "
"seigneuriage."

#: ../../implementation/tokens.rst:22
msgid ""
"The number of tokens used as a basis for calculating seigniorage is 10 "
"billion."
msgstr ""
"Le nombre de jetons servant de base au calcul du seigneuriage est de 10 "
"milliards."

#: ../../implementation/tokens.rst:27
msgid "Divisibility of Tokens"
msgstr "Divisibilité des jetons"

#: ../../implementation/tokens.rst:29
msgid ""
"Typically, a *token* is divisible into some number of parts. We call the "
"indivisible units which make up the CSPR token *motes*. Each CSPR is "
"divisible into :math:`10^{9}` motes. To avoid rounding errors, it is "
"essential to always represent token balances in motes.  In comparison, Ether"
" is divisible into :math:`10^{18}` parts called Wei."
msgstr ""
"Généralement, un *jeton* est divisible en un certain nombre de parties. Nous"
" appelons les unités indivisibles qui composent le jeton CSPR *motes*. "
"Chaque CSPR est divisible en :math:`10^{9}` motes. Pour éviter les erreurs "
"d'arrondi, il est essentiel de toujours représenter les soldes des jetons en"
" motes. En comparaison, l'Ether est divisible en :math:`10^{18}` parties "
"appelées Wei."

#: ../../implementation/tokens.rst:34
msgid "Mints and Purses"
msgstr "Minages (mints ) et portes-monnaie (purses)"

#: ../../implementation/tokens.rst:36
msgid ""
"A *mint* is a contract that can produce new motes of a particular type. We "
"allow for multiple mote types (each of which would have its mint contract) "
"because we anticipate the existence of a large ecosystem of different "
"tokens, similar to the way Etherum works with ERC20 tokens. Casper will "
"deploy a specific mint contract, and it will manage the CSPR utility token "
"(used for paying for computation and bonding onto the network). The mint "
"also maintains all the balances for its type of mote. Each balance is "
"associated with a ``URef``, which acts as a key to instruct the mint to "
"perform actions on that balance (e.g., transfer motes). Informally, we will "
"refer to these balances as *purses* and conceptually represent a container "
"for motes. The ``URef`` is how a purse is referenced externally, outside the"
" mint."
msgstr ""
"Un *mint* est un contrat qui peut produire de nouveaux motes d'un type "
"particulier. Nous autorisons plusieurs types de mote (chacune d'entre elles "
"ayant son propre contrat mint) car nous prévoyons l'existence d'un vaste "
"écosystème de jetons différents, de la même manière qu'Etherum fonctionne "
"avec les jetons ERC20. Casper déploiera un contrat de mint spécifique, et "
"gérera le jeton utilitaire CSPR (utilisé pour payer les calculs et l'accès "
"au réseau). Le mint maintient également tous les soldes pour son type de "
"mote. Chaque solde est associé à un ``URef``, qui agit comme une clé pour "
"instruire le mint d'effectuer des actions sur ce solde (par exemple, "
"transférer des mottes). De manière informelle, nous nous référerons à ces "
"soldes en tant que *purses* et représentent conceptuellement un conteneur "
"pour les motes. Le ``URef`` est la façon dont un porte-monnaie est référencé"
" à l'extérieur du mint."

#: ../../implementation/tokens.rst:38
msgid ""
"The ``AccessRights`` of the :ref:`URefs <global-state-urefs-permissions>` "
"permissions model determine what actions are allowed to be performed when "
"using a ``URef`` associated with a purse."
msgstr ""
"Les ``AccessRights`` du  modèle de permissions des :ref:`URefs <global-"
"state-urefs-permissions>`   détermine quelles actions sont autorisées lors "
"de l'utilisation d'un ``URef`` associé à une porte-monnaie (purse)."

#: ../../implementation/tokens.rst:40
msgid ""
"As all ``URef``\\ s are unforgeable, so the only way to interact with a "
"purse is for a ``URef`` with appropriate ``AccessRights`` to be given to the"
" current context in a valid way (see :ref:`URefs <global-state-urefs-"
"permissions>` permissions for details)."
msgstr ""
"Comme tous les ``URef`` sont infalsifiables, la seule façon d'interagir avec"
" un porte-monnaie est qu'un ``URef`` avec les ``AccessRights`` appropriés "
"soit donné au contexte actuel de façon valide (voir permissions des "
":ref:`URefs <global-state-urefs-permissions>` pour plus de details)."

#: ../../implementation/tokens.rst:42
msgid ""
"The basic global state options map onto more standard monetary operations "
"according to the table below:"
msgstr ""
"Les options de base de l'état global sont mapées sur des opérations "
"monétaires plus standard selon le tableau ci-dessous."

#: ../../implementation/tokens.rst:45
msgid "Global State Action"
msgstr "Global State Action"

#: ../../implementation/tokens.rst:45
msgid "Monetary Action"
msgstr "Action monétaire"

#: ../../implementation/tokens.rst:47
msgid "Add"
msgstr "Ajouter"

#: ../../implementation/tokens.rst:47
msgid "Deposit (i.e. transfer to)"
msgstr "Dépôt (i.e. transférer à)"

#: ../../implementation/tokens.rst:48
msgid "Write"
msgstr "Ecriture"

#: ../../implementation/tokens.rst:48
msgid "Withdraw (i.e. transfer from)"
msgstr "Retrait (i.e. transférer de)"

#: ../../implementation/tokens.rst:49
msgid "Read"
msgstr "Lecture"

#: ../../implementation/tokens.rst:49
msgid "Balance check"
msgstr "Vérification du solde"

#: ../../implementation/tokens.rst:52
msgid ""
"We will use these definitions throughout this chapter to describe the "
"implementation and usage of tokens on the Casper system."
msgstr ""
"Nous utiliserons ces définitions tout au long de ce chapitre pour décrire la"
" mise en œuvre et l'utilisation des jetons sur le système Casper."

#: ../../implementation/tokens.rst:57
msgid "The mint Contract Interface"
msgstr "L'interface du contrat mint"

#: ../../implementation/tokens.rst:59
msgid ""
"A valid mint contract exposes the following methods (recall that many mint "
"implementations may exist, each corresponding to a different currency):"
msgstr ""
"Un contrat mint valide expose les méthodes suivantes (rappelons qu'il peut "
"exister plusieurs implémentations mint, chacune correspondant à une monnaie "
"différente) :"

#: ../../implementation/tokens.rst:61
msgid ""
"``transfer(source: URef, target: URef, amount: Motes) -> TransferResult``"
msgstr ""
"``transfer(source: URef, target: URef, amount: Motes) -> TransferResult``"

#: ../../implementation/tokens.rst:63
msgid ""
"``source`` must have at least ``Write`` access rights, ``target`` must have "
"at least ``Add`` access rights"
msgstr ""
"``source`` doit au moins avoir les droits d'accès ``Write`` , ``target`` "
"doit au moins avoir les droits d'accès``Add`` ."

#: ../../implementation/tokens.rst:65
msgid ""
"``TransferResult`` may be a success acknowledgment or an error in the case "
"of invalid ``source`` or ``target`` or insufficient balance in the "
"``source`` purse"
msgstr ""
"``TransferResult`` peut être un accusé de réception de succès ou une erreur "
"dans le cas d'une ``source`` ou d'un ``target`` invalide ou d'un solde "
"insuffisant dans le porte-monnaie ``source``"

#: ../../implementation/tokens.rst:68
msgid "``mint(amount: Motes) -> MintResult``"
msgstr "``mint(amount: Motes) -> MintResult``"

#: ../../implementation/tokens.rst:70
msgid ""
"``MintResult`` either gives the created ``URef`` (with full access rights), "
"which now has a balance equal to the given ``amount``; or an error due to "
"the minting of new motes not being allowed"
msgstr ""
"``MintResult`` donne soit le ``URef`` créé (avec tous les droits d'accès), "
"qui a maintenant un solde égal au ``amount`` donné ; soit une erreur due au "
"fait que la création de nouvelles motes n'est pas autorisée."

#: ../../implementation/tokens.rst:73
msgid ""
"In the Casper mint, only the system account can call ``mint``, and it has no"
" private key to produce valid cryptographic signatures, which means only the"
" software itself can execute contracts in the context of the system account"
msgstr ""
"Dans le minage (mint) Casper, seul le compte système peut appeler ``mint``, "
"et il n'a pas de clé privée pour produire des signatures cryptographiques "
"valides, ce qui signifie que seul le logiciel lui-même peut exécuter des "
"contrats dans le contexte du compte système."

#: ../../implementation/tokens.rst:78
msgid "``create() -> URef``"
msgstr "``create() -> URef``"

#: ../../implementation/tokens.rst:80
msgid ""
"a convenience function for ``mint(0)`` which cannot fail because it is "
"always allowed to create an empty purse"
msgstr ""
"une fonction de commodité pour ``mint(0)`` qui ne peut pas échouer car elle "
"est toujours autorisée à créer un porte-monnaie vide"

#: ../../implementation/tokens.rst:83
msgid "``balance(purse: URef) -> Option<Motes>``"
msgstr "``balance(purse: URef) -> Option<Motes>``"

#: ../../implementation/tokens.rst:85
msgid "``purse`` must have at least ``Read`` access rights"
msgstr "``purse`` doit avoir au moins droit d'accès ``Read`` "

#: ../../implementation/tokens.rst:86
msgid ""
"``BalanceResult`` either returns the number of motes held by the ``purse``, "
"or nothing if the ``URef`` is not valid"
msgstr ""
"``BalanceResult`` renvoie soit le nombre de motes détenues par le ``purse``,"
" soit rien si le ``URef`` n'est pas valide."

#: ../../implementation/tokens.rst:92
msgid "Using purse ``URef``\\ s"
msgstr "Utilisation des ``URef`` du porte-monnaie "

#: ../../implementation/tokens.rst:94
msgid ""
"It is dangerous to pass a purse's ``URef`` with ``Write`` permissions to a "
"contract. A malicious contract may use that access to take more tokens than "
"were intended or share that ``URef`` with another contract that was not "
"meant to have that access. Therefore, if a contract requires a purse with "
"``Write`` permissions, it is always recommended to use a “payment purse” -- "
"a purse used for that single transaction and nothing else. This ensures that"
" even if the ``URef`` becomes compromised, it does not contain any more "
"funds than the user intended on giving."
msgstr ""
"Il est dangereux de transmettre le ``URef`` d'un porte-monnaie avec les "
"permissions ``Write`` à un contrat. Un contrat malveillant peut utiliser cet"
" accès pour prendre plus de jetons que prévu ou partager ce ``URef`` avec un"
" autre contrat qui n'est pas censé avoir cet accès. Par conséquent, si un "
"contrat nécessite un porte-monnaie avec des droits d'écriture, il est "
"toujours recommandé d'utiliser un \"porte-monnaie de paiement\", "
"c'est-à-dire un porte-monnaie utilisé pour cette seule transaction et rien "
"d'autre. Cela permet de s'assurer que, même si le ``URef`` est compromis, il"
" ne contient pas plus de fonds que ce que l'utilisateur avait l'intention de"
" donner."

#: ../../implementation/tokens.rst:106
msgid ""
"To avoid this inconvenience, it is a better practice for application "
"developers intending to accept payment on-chain to make a version of their "
"own purse ``URef`` with ``Read`` access rights publicly available. This "
"allows clients to pay via a transfer using their purse, without either party"
" exposing ``Write`` access to any purse."
msgstr ""
"Pour éviter ce désagrément, il est préférable que les développeurs "
"d'applications qui ont l'intention d'accepter des paiements sur la chaîne "
"mettent à la disposition du public une version de leur propre porte-monnaie "
"``URef`` avec des droits d'accès ``Read`` . Cela permet aux clients de payer"
" par transfert en utilisant leur porte-monnaie, sans qu'aucune des parties "
"n'expose l'accès ``Write`` à un porte-monnaie."

#: ../../implementation/tokens.rst:112
msgid "Purses and Accounts"
msgstr "Porte-monnaie (purses) et comptes"

#: ../../implementation/tokens.rst:114
msgid ""
"All :ref:`accounts-head` on the Casper system have a purse associated with "
"the Casper system mint, which we call the *main purse*. However, for "
"security reasons, the ``URef`` of the main purse is only available to code "
"running in the context of that account (i.e. only in payment or session "
"code). Therefore, the mint’s ``transfer`` method which accepts ``URef``\\ s "
"is not the most convenient to use when transferring between account main "
"purses. For this reason, Casper supplies a `transfer_to_account "
"<https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/system/fn.transfer_to_account.html>`_"
" function which takes the public key used to derive the :ref:`identity key "
"<global-state-account-key>` of the account. This function uses the mint "
"transfer function with the current account’s main purse as the ``source`` "
"and the main purse of the account at the provided key as the ``target``."
msgstr ""
"Tous les :ref:`accounts-head` du système Casper ont un porte-monnaie associé"
" au mint du système Casper, que nous appelons le *porte-monnaie principal*. "
"Cependant, pour des raisons de sécurité, le ``URef`` du porte-monnaie "
"principal n'est disponible que pour le code s'exécutant dans le contexte de "
"ce compte (c'est-à-dire uniquement dans le code de paiement ou de session). "
"Par conséquent, la méthode ``transfer`` du mint qui accepte les ``URef`` "
"n'est pas la plus pratique à utiliser pour transférer entre les porte-"
"monnaie principaux des comptes. C'est pour cette raison que Casper fournit "
"une fonction `transfer_to_account <https://docs.rs/casper-"
"contract/latest/casper_contract/contract_api/system/fn.transfer_to_account.html>`_"
" qui prend la clé publique utilisée pour dériver l' :ref:`identity key "
"<global-state-account-key>` du compte. Cette méthode utilise la fonction de "
"transfert du mint avec le porte-monnaie principal du compte courant comme "
"``source`` et le porte-monnaie principal du compte à la clé fournie comme "
"``target``."
