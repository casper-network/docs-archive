# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# muss abahmane <elmabahma@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: muss abahmane <elmabahma@gmail.com>, 2021\n"
"Language-Team: French (https://www.transifex.com/caspernetwork/teams/122124/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:2
msgid "ERC-20 Implementation"
msgstr " Implementation de ERC-20"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:4
msgid ""
"The ERC-20 standard is defined in `an Ethereum Improvement Proposal (EIP) "
"<https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md#>`_. Read it "
"carefully, as it defines the methods we have implemented:"
msgstr ""
"La norme ERC-20 est définie dans `une proposition d'amélioration d'Ethereum "
"(EIP) <https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md#>`_. A "
"Lire attentivement, car elle définit les méthodes que nous avons mises en "
"œuvre :"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:6
msgid "`allowance <#the-total-supply-balance-of-and-allowance-functions>`_"
msgstr "`allowance <#the-total-supply-balance-of-and-allowance-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:7
msgid "`approve <#the-approve-and-transfer-from-functions>`_"
msgstr "`approve <#the-approve-and-transfer-from-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:8
msgid "`balance_of <#the-total-supply-balance-of-and-allowance-functions>`_"
msgstr "`balance_of <#the-total-supply-balance-of-and-allowance-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:9
msgid "`decimals <#the-name-symbol-and-decimals-functions>`_"
msgstr "`decimals <#the-name-symbol-and-decimals-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:10
msgid "`name <#the-name-symbol-and-decimals-functions>`_"
msgstr "`name <#the-name-symbol-and-decimals-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:11
msgid "`symbol <#the-name-symbol-and-decimals-functions>`_"
msgstr "`symbol <#the-name-symbol-and-decimals-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:12
msgid "`total_supply <#the-total-supply-balance-of-and-allowance-functions>`_"
msgstr ""
"`total_supply <#the-total-supply-balance-of-and-allowance-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:13
msgid "`transfer <#the-transfer-function>`_"
msgstr "`transfer <#the-transfer-function>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:14
msgid "`transfer_from <#the-approve-and-transfer-from-functions>`_"
msgstr "`transfer_from <#the-approve-and-transfer-from-functions>`_"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:17
msgid "Cloning the Example Contract"
msgstr "Clonage du Contrat Example"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:19
msgid ""
"An example ERC-20 for Casper is located in `GitHub <https://github.com"
"/casper-ecosystem/erc20>`_."
msgstr ""
"Un exemple d'ERC-20 pour Casper se trouve à l'adresse suivante `GitHub "
"<https://github.com/casper-ecosystem/erc20>`_."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:23
msgid "Installing the Required Crates"
msgstr "Installation des 'Crates' requises"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:25
msgid ""
"This is a Rust contract. In Rust, the keyword ``use`` is like an ``include``"
" statement in C/C++. Casper contracts require a few crates to be included. "
"They are:"
msgstr ""
"C'est un contrat Rust. En Rust, le mot-clé \"use\" est comme une déclaration"
" \"include\" en C/C++. Les contrats Casper nécessitent l'inclusion de "
"quelques 'crates'. Il s'agit de :"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:27
msgid "contract: The Casper contract API for runtime and storage"
msgstr "contract : l'API du contrat Casper pour l'exécution et le stockage."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:28
msgid "types: The Casper contract type system"
msgstr "types : Le système de type contrat Casper"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:51
msgid "Initializing the Contract"
msgstr "Initialisation du Contrat"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:53
msgid ""
"When the contract is deployed, it must be initialized with some values; this"
" is done with the help of the ``call()`` function. The contract is "
"initialized with a name, symbol, decimals, starting balances, and the "
"starting token supply."
msgstr ""
"Lorsque le contrat est déployé, il doit être initialisé avec certaines "
"valeurs ; ceci est fait à l'aide de la fonction ``call()``. Le contrat est "
"initialisé avec un nom (name), un symbole (symbol), des décimales "
"(decimals), des soldes de départ (starting balances), et l'approvisionnement"
" en jetons de départ."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:85
msgid "The ``name``, ``symbol``, and ``decimals`` functions"
msgstr "Les fonctions ``name``, ``symbol``, et ``decimals``"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:87
msgid ""
"We then also add a few helper functions to set and retrieve values from the "
"contract. Notice that these helper functions reference each of the "
"``set_key`` definitions when the contract is deployed; a generic ``get_key``"
" function to retrieve values is also used."
msgstr ""
"Nous ajoutons ensuite quelques fonctions utilitaires pour définir et "
"récupérer les valeurs du contrat. Remarquez que ces fonctions utilitaires "
"font référence à chacune des définitions de ``set_key`` lorsque le contrat "
"est déployé ; une fonction générique ``get_key`` pour récupérer les valeurs "
"est également utilisée."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:111
msgid "The ``total_supply``, ``balance_of``, and ``allowance`` functions"
msgstr "Les fonctions ``total_supply``, ``balance_of``, et  ``allowance`` "

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:113
msgid ""
"Let's explore the implementation of some key ERC-20 methods: ``balance_of``,"
" ``total_supply``, and ``allowance``."
msgstr ""
"Explorons l'implémentation de certaines méthodes clés de ERC-20 : "
"``balance_of``, ``total_supply``, et ``allowance``."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:115
msgid ""
"The ``allowance`` method enables owners to specify an amount that a spender "
"account can spend."
msgstr ""
"La méthode ``allowance`` permet aux propriétaires de spécifier un montant "
"qu'un compte de dépense peut dépenser."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:142
msgid "The ``transfer`` function"
msgstr "La fonction ``transfer``"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:144
msgid ""
"Here is the ``transfer`` method, which makes it possible to transfer tokens "
"from the ``sender`` address to the ``recipient`` address. If the ``sender`` "
"address has enough balance, then tokens should be transferred to the "
"``recipient`` address."
msgstr ""
"La méthode ``transfer`` permet de transférer des jetons de l'adresse "
"``sender`` (expéditeur) à l'adresse ``recipient`` (destinataire). Si "
"l'adresse de l'expéditeur a un solde suffisant, les jetons sont transférés à"
" l'adresse du destinataire."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:165
msgid "The ``approve`` and ``transfer_from`` functions"
msgstr "Les fonctions ``approve`` et ``transfer_from``"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:166
msgid ""
"Here are the functions ``approve`` and ``transfer_from``. ``approve`` is "
"used to allow another address to spend tokens on one's behalf. This is used "
"when multiple keys are authorized to perform deployments from an account."
msgstr ""
"Voici les fonctions ``approve`` et ``transfer_from``. ``approve`` est "
"utilisée pour autoriser une autre adresse à dépenser des jetons en son nom. "
"Ceci est utilisé lorsque plusieurs clés sont autorisées à effectuer des "
"déploiements à partir d'un compte."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:181
msgid "``transfer_from`` allows spending an approved amount of tokens."
msgstr "``transfer_from`` permet de dépenser un montant approuvé de jetons."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:204
msgid "The ``get_key`` and ``set_key`` functions"
msgstr "Les fonctions ``get_key`` et ``set_key``"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:205
msgid ""
"The ``get_key`` and ``set_key`` functions are generic Casper storage write "
"and read methods. Implement these one time for the contract and then call "
"them as needed."
msgstr ""
"Les fonctions ``get_key`` et ``set_key`` sont des méthodes génériques "
"d'écriture/lecture du stockage Casper. Implémentez-les une fois pour le "
"contrat, puis appelez-les si nécessaire."

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:234
msgid "Other Helper Functions"
msgstr "Autres fonctions utilitaires"

#: ../../dapp-dev-guide/tutorials/erc20/implementation.rst:235
msgid ""
"The ``balance_key`` and ``allowance_key ``functions format the balances and "
"account information from their internal representation into strings."
msgstr ""
"Les fonctions ``balance_key`` et ``allowance_key`` formatent les soldes et "
"les informations de compte de leur représentation interne en chaînes de "
"caractères."
