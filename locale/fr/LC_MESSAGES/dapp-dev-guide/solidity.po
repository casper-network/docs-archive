# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# muss abahmane <elmabahma@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: muss abahmane <elmabahma@gmail.com>, 2021\n"
"Language-Team: French (https://www.transifex.com/caspernetwork/teams/122124/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/solidity.rst:3
msgid "Transpiling Solidity to Rust"
msgstr "Transpiler (Transpiling) Solidity en Rust"

#: ../../dapp-dev-guide/solidity.rst:5
msgid ""
"**Introducing Caspiler - Transpile Solidity to Rust and access the cool "
"features of Casper!**"
msgstr ""
"**Introduction à Caspiler - Transpiler Solidity en Rust et accéder aux "
"fonctionnalités de Casper!**"

#: ../../dapp-dev-guide/solidity.rst:8
msgid "Smart Contracts on Casper"
msgstr "Contrats intelligents sur Casper"

#: ../../dapp-dev-guide/solidity.rst:10
msgid ""
"The Casper Virtual Machine runs smart contracts that compile to Webassembly."
" There are two ecosystems that provide compilation targets for webassembly: "
"Rust and AssemblyScript.  CasperLabs provides smart contract libraries to "
"support development for both of these languages. The core development of the"
" Casper Protocol is taking place in Rust, and as a result, there are many "
"Rust tools that make rapid Smart Contracts development possible. It is "
"widely recognized that most smart contracts in use today have been authored "
"in Solidity for the EVM (Ethereum Virtual Machhine)."
msgstr ""
"La machine virtuelle Casper exécute des contrats intelligents qui sont "
"compilés en Webassembly. Il existe deux écosystèmes qui fournissent des "
"cibles (target) de compilation pour Webassembly : Rust et AssemblyScript. "
"CasperLabs fournit des librairies de contrats intelligents pour soutenir le "
"développement dans ces deux langages. Le cœur du développement du protocole "
"Casper se fait en langage Rust et, par conséquent, il existe de nombreux "
"outils Rust qui permettent un développement rapide des contrats "
"intelligents. Il est largement reconnu que la plupart des contrats "
"intelligents utilisés aujourd'hui ont été rédigés en Solidity pour l'EVM "
"(Ethereum Virtual Machhine)."

#: ../../dapp-dev-guide/solidity.rst:13 ../../dapp-dev-guide/solidity.rst:42
msgid "Solidity"
msgstr "Solidity"

#: ../../dapp-dev-guide/solidity.rst:15
msgid ""
"Without any doubt, the existence and simplicity of Solidity is one of the "
"key factors behind the growth of Ethereum. There is a large group of "
"developers for whom Solidity is still the best tool for expressing their "
"Smart Contract ideas. At CasperLabs we feel a strong connection with the "
"Ethereum community, so we decided to include support for Solidity via a "
"transpiler."
msgstr ""
"Sans aucun doute, l'existence et la simplicité de Solidity est l'un des "
"facteurs clés de la croissance d'Ethereum. Il existe un grand groupe de "
"développeurs pour qui Solidity reste le meilleur outil pour exprimer leurs "
"idées de contrats intelligents. Chez CasperLabs, nous ressentons un lien "
"fort avec la communauté Ethereum, c'est pourquoi nous avons décidé d'inclure"
" le support de Solidity via un 'transpilateur'."

#: ../../dapp-dev-guide/solidity.rst:18
msgid "Transpiler"
msgstr "Transpilateur"

#: ../../dapp-dev-guide/solidity.rst:20
msgid ""
"Transpiling is a well known process of turning code written in one high-"
"level language into another high-level language. At the moment the most "
"popular example is the TypeScript to JavaScript transpiler."
msgstr ""
"Le transpilage est un processus bien connu qui consiste à transformer du "
"code écrit dans un langage de haut niveau en un autre langage de haut "
"niveau. À l'heure actuelle, l'exemple le plus populaire est le transpilateur"
" TypeScript vers JavaScript."

#: ../../dapp-dev-guide/solidity.rst:22
msgid ""
"We have concluded that Solidity support is much easier and efficient to "
"achieve by transpiling Solidity to Rust, rather than by compiling Solidity "
"to WASM bytecode for the following reasons:"
msgstr ""
"Nous avons conclu que le support de Solidity est beaucoup plus facile et "
"efficace à réaliser en transposant Solidity en Rust, plutôt qu'en compilant "
"Solidity en bytecode WASM pour les raisons suivantes :"

#: ../../dapp-dev-guide/solidity.rst:25
msgid ""
"Solidity features are easy to express in Rust, which is a much richer "
"language."
msgstr ""
"Les fonctionnalités de Solidity sont faciles à exprimer en Rust, qui est un "
"langage beaucoup plus riche."

#: ../../dapp-dev-guide/solidity.rst:26
msgid "The shape of CasperLabs DSL is similar to Solidity."
msgstr "La forme du DSL de CasperLabs est similaire à celle de Solidity."

#: ../../dapp-dev-guide/solidity.rst:27
msgid ""
"The CasperLabs Rust toolchain is something we want to leverage, rather than "
"coding it from scratch."
msgstr ""
"Nous souhaitons tirer parti de la chaîne d'outils (toolchain) Rust de "
"CasperLabs, plutôt que de la coder à partir de zéro."

#: ../../dapp-dev-guide/solidity.rst:28
msgid ""
"The Casper execution model is different than Ethereum's, therefore it's "
"easier to translate it on the language level, than on the bytecode level."
msgstr ""
"Le modèle d'exécution de Casper est différent de celui d'Ethereum, il est "
"donc plus facile de le traduire au niveau du langage qu'au niveau du "
"bytecode."

#: ../../dapp-dev-guide/solidity.rst:31
msgid "Solidity to Rust Migration"
msgstr "Migration de Solidity à Rust"

#: ../../dapp-dev-guide/solidity.rst:33
msgid ""
"Having transpiler gives Smart Contract developers a powerful tool for the "
"migration of the existing Solidity source code to Rust if they wish to use "
"it."
msgstr ""
"Le transpilateur offre aux développeurs de contrats intelligents un outil "
"puissant pour la migration du code source existant de Solidity vers Rust "
"s'ils souhaitent l'utiliser."

#: ../../dapp-dev-guide/solidity.rst:36
msgid "Simple Example"
msgstr "Example Simple"

#: ../../dapp-dev-guide/solidity.rst:38
msgid ""
"Let's see how the Solidity code is being transpiled to the CasperLabs Rust "
"DSL. There is almost one to one translation of the core components: "
"``contract``\\ , ``constructor`` and ``method``."
msgstr ""
"Voyons comment le code Solidity est transposé dans le DSL Rust de "
"CasperLabs. Il y a une traduction presque intégrale des composants de base :"
" ```contract``\\ , ``constructor`` et ``method``."

#: ../../dapp-dev-guide/solidity.rst:63
msgid "CasperLabs Rust DSL"
msgstr "Le DSL CasperLabs Rust "

#: ../../dapp-dev-guide/solidity.rst:89
msgid "ERC20"
msgstr "ERC20"

#: ../../dapp-dev-guide/solidity.rst:91
msgid ""
"It is possible to transpile a complex Smart Contracts like ERC20 Token. Full"
" example with tests can be found in this `GitHub repository "
"<https://github.com/casper-ecosystem/erc20>`_."
msgstr ""
"Il est possible de transpiler un contrat intelligent complexe comme un Token"
" ERC20. Un exemple complet avec des tests peut être trouvé dans ce dépôt "
"`GitHub <https://github.com/casper-ecosystem/erc20>`_."

#: ../../dapp-dev-guide/solidity.rst:95
msgid "Deploying to Testnet."
msgstr "Déploiement sur Testnet."

#: ../../dapp-dev-guide/solidity.rst:97
msgid ""
"Take a look at the deployment instructions in the dApp developer guide for "
"details."
msgstr ""
"Pour plus de détails, consultez les instructions de déploiement dans le "
"guide du développeur de dApp."
