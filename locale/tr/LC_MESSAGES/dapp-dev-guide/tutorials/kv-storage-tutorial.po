# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Furkan Ahmet KARA <furkanahmetkara.fk@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: Furkan Ahmet KARA <furkanahmetkara.fk@gmail.com>, 2021\n"
"Language-Team: Turkish (https://www.transifex.com/caspernetwork/teams/122124/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:6
msgid "Key Value Storage Tutorial"
msgstr "Anahtar Değeri Depolama Eğitimi"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:8
msgid ""
"This tutorial covers a simple contract, which creates a key that stores a "
"``CLType`` value. This example will show you how to store a *u64*, *string*,"
" *account hash*, or *U512* value."
msgstr ""
"Bu eğitim, bir ``CLType`` değerini depolayan bir anahtar oluşturan basit bir"
" kontratı kapsar. Bu örnek size bir *u64*, *string*, *account hash*, veya "
"*U512* değerinin nasıl depolanacağını gösterecektir."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:10
msgid ""
"The code is available in the `Casper Ecosystem GitHub <https://github.com"
"/casper-ecosystem/kv-storage-contract>`_. Or, you can get started in `GitPod"
" <https://gitpod.io/#https://github.com/casper-ecosystem/kv-storage-"
"contract>`_."
msgstr ""
"Kod, `Casper Ecosystem GitHub <https://github.com/casper-ecosystem/kv-"
"storage-contract>`_ içinde mevcuttur.  Veya `GitPod "
"<https://gitpod.io/#https://github.com/casper-ecosystem/kv-storage-"
"contract>`_ içerisinde başlayabilirsiniz."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:14
msgid "The Contract"
msgstr "Kontrat"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:16
msgid ""
"Let's start by understanding the structure of the contract itself. Here we "
"create a contract and name it ``kvstorage_contract``. The contract package "
"will be stored under this name on the blockchain. Since the key-value "
"contract is slightly stateless, initialization is not required."
msgstr ""
"Kontrat yapısını anlayarak başlayalım. Burada bir kontrat oluşturuyoruz ve "
"onu ``kvstorage_contract`` olarak adlandırıyoruz. Kontrat paketi blokzincir "
"üzerinde bu ad altında saklanacaktır. key-value kontratı biraz durumsuz "
"olduğundan, başlatma gerekli değildir."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:138
msgid "Testing the Contract"
msgstr "Kontratın Test Edilmesi"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:140
msgid ""
"The CasperLabs Contracts SDK supports local testing of smart contracts. This"
" tutorial will cover how to test the u64 key-value function. This can be "
"easily adapted it for other types also."
msgstr ""
"CasperLabs Kontratlar SDK'sı, akıllı kontratların yerel olarak test "
"edilmesini destekler. Bu eğitim, u64 key-value işlevinin nasıl test "
"edileceğini kapsayacaktır. Bu, diğer türler için de kolayca uyarlanabilir."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:143
msgid ""
"In order to test the contract, the value must be stored, and the contract "
"has to be deployed. Here is some sample code for these steps:"
msgstr ""
"Kontratı test etmek için değer saklanmış ve kontrat dağıtılmış olmalıdır. "
"İşte bu adımlar için bazı örnek kodlar:"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:198
msgid "Write Unit Tests"
msgstr "Birim Testleri Yazma"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:200
msgid ""
"With these functions in place, it's possible to start writing tests for the "
"contract."
msgstr ""
"Bu işlevler yerine getirildiğinde, kontrat için testler yazmaya başlamak "
"mümkündür."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:231
msgid "Running Locally"
msgstr "Yerel Olarak Çalıştırma"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:233
msgid ""
"It's possible to run the unit tests locally- if you have set up the contract"
" using `cargo-casperlabs <https://crates.io/cargo-casperlabs>`_. The steps "
"to set up the SDK are in the guide."
msgstr ""
"Eğer kontratı  `cargo-casperlabs <https://crates.io/cargo-casperlabs>`_ "
"kullanarak ayarladıysanız, birim testlerini yerel olarak çalıştırmak "
"mümkündür. SDK'yı kurma adımları rehber içindedir."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:241
msgid "Deploying to the Testnet and Interacting with the Contract"
msgstr "Testnet'e Dağıtım ve Kontrat ile Etkileşim"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:243
msgid ""
"When working with the testnet, create an account in `CLarity "
"<https://clarity.casperlabs.io>`_ and fund it using the faucet. Download the"
" private key and use the key to sign the deployment. It's possible to create"
" keys using the rust client as well."
msgstr ""
"Testnet ile çalışırken,  `CLarity <https://clarity.casperlabs.io>`_ içinde "
"bir hesap oluşturun ve faucet kullanarak finanse edin. Özel anahtarı indirin"
" ve dağıtımı imzalamak için anahtarı kullanın. Rust istemcisini kullanarak "
"da anahtarlar oluşturmak mümkündür."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:246
msgid "Deploy the Contract"
msgstr "Kontratı Dağıtma"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:248
msgid ""
"After the contract has been compiled, it's time to deploy the compiled wasm "
"to the network. This action installs the contract in the blockchain. Once "
"the contract is deployed, the client can retrieve the contract session hash "
"as well as the blockhash where the contract is deployed."
msgstr ""
"Kontrat derlendikten sonra, derlenen wasm'yi ağa dağıtma zamanı. Bu eylem, "
"kontratı blokzincir içerisinde yükler. Kontrat bir kez dağıtıldıktan sonra "
"müşteri, kontratın dağıtıldığı blockhash'in yanı sıra kontrat oturum özeti "
"de alabilir."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:251
msgid ""
"```casper-client put-deploy --chain-name :raw-html-m2r:`<CHAIN-NAME>` "
"--node-address http://\\ :raw-html-m2r:`<HOST>`\\ :\\ :raw-html-m2r:`<PORT>`"
" --secret-key /home/keys/secretkey.pem --session-path  $HOME/kv-storage-"
"contract/target/wasm32-unknown-unknown/release/contract.wasm  --payment-"
"amount 1000000000000"
msgstr ""
"```casper-client put-deploy --chain-name :raw-html-m2r:`<CHAIN-NAME>` "
"--node-address http://\\ :raw-html-m2r:`<HOST>`\\ :\\ :raw-html-m2r:`<PORT>`"
" --secret-key /home/keys/secretkey.pem --session-path $HOME/kv-storage-"
"contract/target/wasm32-unknown-unknown/release/contract.wasm --payment-"
"amount 1000000000000"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:269
msgid "If the deploy works, a response similar this will be returned:"
msgstr "Eğer dağıtım çalışırsa, buna benzer bir yanıt döndürülecektir:"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:276
msgid "Query the Contract On Chain"
msgstr "Zincir Üzerindeki Kontratı Sorgula"

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:278
msgid ""
"Contracts can be executed under different contexts. In this example, when "
"the contract is deployed, it runs in the context of a ``Contract`` and not a"
" ``Session``. This means that all stored keys are not stored under the "
"account hash, but within the context of the contract. Therefore when we "
"query to retrieve the value under a key, we are actually querying "
"``AccountHash/kvstorage_contract/<key-name>`` and not just ``AccountHash"
"/<key-name>``."
msgstr ""
"Kontratlar farklı bağlamlar altında yürütülebilir. Bu örnekte, kontrat "
"dağıtıldığında, bir ``Session`` değil ``Contract`` bağlamında çalışır. Bu, "
"saklanan tüm anahtarların account hash altında değil, contract bağlamı "
"içerisinde depolandığı anlamına gelir. Bu nedenle, bir anahtarın altındaki "
"değeri almak için sorgulama yaptığımızda, aslında sadece``AccountHash/<key-"
"name>`` değil ``AccountHash/kvstorage_contract/<key-name>``  sorgusunu da "
"yapıyoruz."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:284
msgid ""
"You must first find the block hash for the block that contains your deploy. "
"Once you have the requisite block hash, then you can use ``casper-client`` "
"to retrieve the session hash"
msgstr ""
"İlk önce dağıtımınızı içeren blok için blok özeti bulmalısınız. Gerekli blok"
" özetine sahip olduğunuzda, oturum özetini almak için``casper-client`` "
"kullanabilirsiniz."

#: ../../dapp-dev-guide/tutorials/kv-storage-tutorial.rst:287
msgid ""
"Reading a value is simple enough, we obtain the block hash under which the "
"value, is stored, and then\\ :raw-html-m2r:`<br>` using that block hash, and"
" the ``query-state`` command you can easily retrieve and value that was "
"stored under a named key. Please reference the `Querying Section "
"<https://docs.casperlabs.io/en/latest/dapp-dev-guide/querying.html>`_ for "
"details. An example global state query looks like this:"
msgstr ""
"Bir değeri okumak yeterince basittir, değerin altında saklandığı blok özeti "
"elde ederiz ve ardından bu blok özetini kullanarak\\ :raw-html-m2r:`<br>` ve"
"  ``query-state`` komutunu kullanarak adlandırılmış bir anahtar altında "
"depolanan değeri kolayca elde edebilirsiniz. Ayrıntılar için lütfen  "
"`Sorgulama Bölümüne <https://docs.casperlabs.io/en/latest/dapp-dev-"
"guide/querying.html>`_  bakın. Örnek bir küresel durum sorgusu şöyle "
"görünür:"
