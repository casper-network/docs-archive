# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Dr. Ayhan YALÇINSOY <ayhanyalcinsoy@pisilinux.org>, 2021
# Muhammet Kara <muhammet.kara@metu.edu.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:46+0000\n"
"Last-Translator: Muhammet Kara <muhammet.kara@metu.edu.tr>, 2021\n"
"Language-Team: Turkish (https://www.transifex.com/caspernetwork/teams/122124/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../dapp-dev-guide/solidity.rst:3
msgid "Transpiling Solidity to Rust"
msgstr "Solidity'i Rust'a Çevirmek"

#: ../../dapp-dev-guide/solidity.rst:5
msgid ""
"**Introducing Caspiler - Transpile Solidity to Rust and access the cool "
"features of Casper!**"
msgstr ""
"**Caspiler tanıtımı - Solidity'i Rust'a çevirin ve Casper'ın harika "
"özelliklerine erişin!**"

#: ../../dapp-dev-guide/solidity.rst:8
msgid "Smart Contracts on Casper"
msgstr "Casper'da Akıllı Kontratlar"

#: ../../dapp-dev-guide/solidity.rst:10
msgid ""
"The Casper Virtual Machine runs smart contracts that compile to Webassembly."
" There are two ecosystems that provide compilation targets for webassembly: "
"Rust and AssemblyScript.  CasperLabs provides smart contract libraries to "
"support development for both of these languages. The core development of the"
" Casper Protocol is taking place in Rust, and as a result, there are many "
"Rust tools that make rapid Smart Contracts development possible. It is "
"widely recognized that most smart contracts in use today have been authored "
"in Solidity for the EVM (Ethereum Virtual Machhine)."
msgstr ""
"Casper Virtual Machine, Webassembly için derlenen akıllı kontratlar "
"çalıştırır. Webassembly için derleme hedefleri sağlayan iki ekosistem "
"vardır: Rust ve AssemblyScript. CasperLabs, bu dillerin her ikisi için de "
"geliştirmeyi desteklemek için akıllı kontrat kitaplıkları sağlar. Casper "
"Protokolünün temel gelişimi Rust'ta gerçekleşiyor ve sonuç olarak, hızlı "
"Akıllı Kontratlar geliştirmeyi mümkün kılan birçok Rust aracı var. Bugün "
"kullanılan akıllı kontratların çoğunun Solidity for the EVM (Ethereum "
"Virtual Machine)'de yazıldığı yaygın olarak kabul edilmektedir."

#: ../../dapp-dev-guide/solidity.rst:13 ../../dapp-dev-guide/solidity.rst:42
msgid "Solidity"
msgstr "Solidity"

#: ../../dapp-dev-guide/solidity.rst:15
msgid ""
"Without any doubt, the existence and simplicity of Solidity is one of the "
"key factors behind the growth of Ethereum. There is a large group of "
"developers for whom Solidity is still the best tool for expressing their "
"Smart Contract ideas. At CasperLabs we feel a strong connection with the "
"Ethereum community, so we decided to include support for Solidity via a "
"transpiler."
msgstr ""
"Hiç şüphesiz, Solidity'nin varlığı ve sadeliği, Ethereum'un büyümesinin "
"arkasındaki kilit faktörlerden biridir. Solidity'nin Akıllı Kontrat "
"fikirlerini ifade etmek için hâlâ en iyi araç olduğu büyük bir geliştirici "
"grubu var. CasperLabs'ta Ethereum topluluğu ile güçlü bir bağ hissediyoruz, "
"bu nedenle bir aktarıcı aracılığıyla Solidity desteğini dahil etmeye karar "
"verdik."

#: ../../dapp-dev-guide/solidity.rst:18
msgid "Transpiler"
msgstr "Aktarıcı"

#: ../../dapp-dev-guide/solidity.rst:20
msgid ""
"Transpiling is a well known process of turning code written in one high-"
"level language into another high-level language. At the moment the most "
"popular example is the TypeScript to JavaScript transpiler."
msgstr ""
"Aktarma, bir yüksek seviyeli dilde yazılmış kodu başka bir yüksek seviyeli "
"dile çevirmek için iyi bilinen bir işlemdir. Şu anda en popüler örnek "
"TypeScript'ten JavaScript'e aktarıcıdır."

#: ../../dapp-dev-guide/solidity.rst:22
msgid ""
"We have concluded that Solidity support is much easier and efficient to "
"achieve by transpiling Solidity to Rust, rather than by compiling Solidity "
"to WASM bytecode for the following reasons:"
msgstr ""
"Şu nedenlerle Solidity'yi WASM bayt koduna derlemek yerine, Solidity'yi "
"Rust'a aktararak Solidity desteğini elde etmenin çok daha kolay ve verimli "
"olduğu sonucuna vardık:"

#: ../../dapp-dev-guide/solidity.rst:25
msgid ""
"Solidity features are easy to express in Rust, which is a much richer "
"language."
msgstr ""
"Çok daha zengin bir dil olan Rust'ta sağlamlık özelliklerinin ifade edilmesi"
" kolaydır."

#: ../../dapp-dev-guide/solidity.rst:26
msgid "The shape of CasperLabs DSL is similar to Solidity."
msgstr "CasperLabs DSL'nin şekli Solidity'ye benzer."

#: ../../dapp-dev-guide/solidity.rst:27
msgid ""
"The CasperLabs Rust toolchain is something we want to leverage, rather than "
"coding it from scratch."
msgstr ""
"CasperLabs Rust araç zinciri, sıfırdan kodlamak yerine kullanmak istediğimiz"
" bir şey."

#: ../../dapp-dev-guide/solidity.rst:28
msgid ""
"The Casper execution model is different than Ethereum's, therefore it's "
"easier to translate it on the language level, than on the bytecode level."
msgstr ""
"Casper yürütme modeli Ethereum'dan farklıdır, bu nedenle onu dil düzeyinde "
"çevirmek bayt kodu düzeyinden daha kolaydır."

#: ../../dapp-dev-guide/solidity.rst:31
msgid "Solidity to Rust Migration"
msgstr "Solidity'den Rust'a Göç"

#: ../../dapp-dev-guide/solidity.rst:33
msgid ""
"Having transpiler gives Smart Contract developers a powerful tool for the "
"migration of the existing Solidity source code to Rust if they wish to use "
"it."
msgstr ""
"Aktarıcıya sahip olmak, Akıllı Kontrat geliştiricilerine, kullanmak "
"isterlerse mevcut Solidity kaynak kodunu Rust'a taşımak için güçlü bir araç "
"sağlar."

#: ../../dapp-dev-guide/solidity.rst:36
msgid "Simple Example"
msgstr "Basit Örnek"

#: ../../dapp-dev-guide/solidity.rst:38
msgid ""
"Let's see how the Solidity code is being transpiled to the CasperLabs Rust "
"DSL. There is almost one to one translation of the core components: "
"``contract``\\ , ``constructor`` and ``method``."
msgstr ""
"Solidity kodunun CasperLabs Rust DSL'ye nasıl aktarıldığını görelim. Temel "
"bileşenlerin neredeyse bire bir çevirisi var: ``contract``\\ , "
"``constructor`` ve ``method``."

#: ../../dapp-dev-guide/solidity.rst:63
msgid "CasperLabs Rust DSL"
msgstr "CasperLabs Rust DSL"

#: ../../dapp-dev-guide/solidity.rst:89
msgid "ERC20"
msgstr "ERC20"

#: ../../dapp-dev-guide/solidity.rst:91
msgid ""
"It is possible to transpile a complex Smart Contracts like ERC20 Token. Full"
" example with tests can be found in this `GitHub repository "
"<https://github.com/casper-ecosystem/erc20>`_."
msgstr ""
"ERC20 Token gibi karmaşık Akıllı Kontratları aktarmak mümkündür. Testlerle "
"ilgili tam örnek bu `GitHub deposunda <https://github.com/casper-"
"ecosystem/erc20>`_ bulunabilir."

#: ../../dapp-dev-guide/solidity.rst:95
msgid "Deploying to Testnet."
msgstr "Testnet'e dağıtma."

#: ../../dapp-dev-guide/solidity.rst:97
msgid ""
"Take a look at the deployment instructions in the dApp developer guide for "
"details."
msgstr ""
"Ayrıntılar için dApp geliştirici kılavuzundaki dağıtım talimatlarına bakın."
