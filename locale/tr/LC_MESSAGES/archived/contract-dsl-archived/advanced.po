# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, CasperLabs LLC
# This file is distributed under the same license as the CasperLabs Tech
# Spec package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
# Translators:
# Muhammet Kara <muhammet.kara@metu.edu.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CasperLabs Tech Spec\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-26 20:13+0000\n"
"PO-Revision-Date: 2021-06-26 21:45+0000\n"
"Last-Translator: Muhammet Kara <muhammet.kara@metu.edu.tr>, 2021\n"
"Language-Team: Turkish (https://www.transifex.com/caspernetwork/teams/122124/tr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: tr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../archived/contract-dsl-archived/advanced.rst:3
msgid "Advanced Options"
msgstr "Gelişmiş Seçenekler"

#: ../../archived/contract-dsl-archived/advanced.rst:5
msgid ""
"Once the base logic of the smart contract is in place, it's desirable to "
"optimize the contract for the blockchain.  This will require digging into "
"the actual code that the DSL generates.  This section will describe the "
"steps to do this.  Once the code has been expanded and then changed, make "
"sure to remove the macros from the project configuration before saving the "
"changes."
msgstr ""
"Akıllı kontratın temel mantığı yerine getirildikten sonra kontratın blok "
"zincir için optimize edilmesi gerekir. Bu da, DSL'nin ürettiği gerçek kodun "
"derinliklerine inmeyi gerektirecektir. Bu bölümde bunu yapmak için gerekli "
"adımları açıklayacağız. Kod genişletildikten ve değiştirildikten sonra, "
"değişiklikleri kaydetmeden önce makroları proje yapılandırmasından "
"kaldırdığınızdan emin olun."

#: ../../archived/contract-dsl-archived/advanced.rst:12
msgid "Debugging Contracts"
msgstr "Kontratlarda Hata Ayıklama"

#: ../../archived/contract-dsl-archived/advanced.rst:14
msgid ""
"It is possible to debug Rust contracts inside any IDE that supports "
"breakpoints and watches. Make sure that the IDE supports Rust development "
"and tools."
msgstr ""
"Kesme noktalarını ve saatleri destekleyen herhangi bir IDE içinde Rust "
"kontratlarının hatalarını ayıklamak mümkündür. IDE'nin Rust geliştirme ve "
"araçlarını desteklediğinden emin olun."

#: ../../archived/contract-dsl-archived/advanced.rst:18
msgid "Expanding the Code"
msgstr "Kodu Genişletmek"

#: ../../archived/contract-dsl-archived/advanced.rst:20
msgid ""
"When the rust compiler encounters each of the macros, it 'expands' the code "
"and adds additional lines of code for each of the macros. The resultant "
"expanded code is then compiled to the wasm which can then be deployed to the"
" blockchain."
msgstr ""
"Rust derleyici makroların her biriyle karşılaştığında, kodu 'genişletir' ve "
"makroların her biri için ek kod satırları ekler. Elde edilen genişletilmiş "
"kod blok zincirde dağıtılan wasm olarak derlenir."

#: ../../archived/contract-dsl-archived/advanced.rst:23
msgid ""
"The ``cargo expand`` tool will run the macros and append the boilerplate "
"code to the contract without compiling the code."
msgstr ""
" ``cargo expand`` aracı makroları çalıştıracak ve kodu derlemeden ortak kodu"
" kontrata ekleyecektir."

#: ../../archived/contract-dsl-archived/advanced.rst:25
msgid "Install the tooling with the following command:"
msgstr "Araçları aşağıdaki komutla yükleyin:"

#: ../../archived/contract-dsl-archived/advanced.rst:31
msgid "Run this command in the folder containing the smart contract code:"
msgstr "Akıllı kontrat kodunu içeren klasörde bu komutu çalıştırın:"

#: ../../archived/contract-dsl-archived/advanced.rst:38
msgid "Example Simple Counter Contract"
msgstr "Örnek Basit Sayaç Kontratı"

#: ../../archived/contract-dsl-archived/advanced.rst:40
msgid ""
"Running ``cargo-expand`` on the simple counter contract yeilds this output:"
msgstr ""
"Basit sayaç kontratı üzerinde ``cargo-expand``i çalıştırmak bu çıktıyı "
"verir:"
